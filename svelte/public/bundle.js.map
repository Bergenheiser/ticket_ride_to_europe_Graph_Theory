{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/plateau_data.js","../node_modules/svelte/store/index.mjs","../src/stores.js","../src/Plateau.svelte","../src/Joueur.svelte","../src/Prompt.svelte","../src/Log.svelte","../src/Piles.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export const villesData = {\n    \"Cadiz\": { \"x\": 144, \"y\": 1072, \"nom\": \"Cadiz\" },\n    \"Madrid\": { \"x\": 147, \"y\": 946, \"nom\": \"Madrid\" },\n    \"Barcelona\": { \"x\": 336, \"y\": 961, \"nom\": \"Barcelona\" },\n    \"Lisboa\": { \"x\": 32, \"y\": 981, \"nom\": \"Lisboa\" },\n    \"Pamplona\": { \"x\": 318, \"y\": 805, \"nom\": \"Pamplona\" },\n    \"Paris\": { \"x\": 425, \"y\": 544, \"nom\": \"Paris\" },\n    \"Dieppe\": { \"x\": 341, \"y\": 467, \"nom\": \"Dieppe\" },\n    \"Brest\": { \"x\": 188, \"y\": 516, \"nom\": \"Brest\" },\n    \"London\": { \"x\": 358, \"y\": 313, \"nom\": \"London\" },\n    \"Amsterdam\": { \"x\": 524, \"y\": 319, \"nom\": \"Amsterdam\" },\n    \"Bruxelles\": { \"x\": 485, \"y\": 399, \"nom\": \"Bruxelles\" },\n    \"Edinburgh\": { \"x\": 245, \"y\": 56, \"nom\": \"Edinburgh\" },\n    \"Zurich\": { \"x\": 622, \"y\": 638, \"nom\": \"Zurich\" },\n    \"Marseille\": { \"x\": 575, \"y\": 797, \"nom\": \"Marseille\" },\n    \"Frankfurt\": { \"x\": 638, \"y\": 454, \"nom\": \"Frankfurt\" },\n    \"Munchen\": { \"x\": 737, \"y\": 530, \"nom\": \"Munchen\" },\n    \"Wien\": { \"x\": 930, \"y\": 559, \"nom\": \"Wien\" },\n    \"Venezia\": { \"x\": 763, \"y\": 694, \"nom\": \"Venezia\" },\n    \"Roma\": { \"x\": 779, \"y\": 849, \"nom\": \"Roma\" },\n    \"Brindisi\": { \"x\": 925, \"y\": 892, \"nom\": \"Brindisi\" },\n    \"Palermo\": { \"x\": 841, \"y\": 1072, \"nom\": \"Palermo\" },\n    \"Athina\": { \"x\": 1136, \"y\": 1024, \"nom\": \"Athina\" },\n    \"Sofia\": { \"x\": 1167, \"y\": 830, \"nom\": \"Sofia\" },\n    \"Sarajevo\": { \"x\": 1053, \"y\": 815, \"nom\": \"Sarajevo\" },\n    \"Zagrab\": { \"x\": 908, \"y\": 714, \"nom\": \"Zagrab\" },\n    \"Budapest\": { \"x\": 1014, \"y\": 602, \"nom\": \"Budapest\" },\n    \"Kyiv\": { \"x\": 1370, \"y\": 438, \"nom\": \"Kyiv\" },\n    \"Warszawa\": { \"x\": 1113, \"y\": 345, \"nom\": \"Warszawa\" },\n    \"Wilno\": { \"x\": 1302, \"y\": 303, \"nom\": \"Wilno\" },\n    \"Smolensk\": { \"x\": 1479, \"y\": 310, \"nom\": \"Smolensk\" },\n    \"Moskva\": { \"x\": 1625, \"y\": 269, \"nom\": \"Moskva\" },\n    \"Kharkov\": { \"x\": 1600, \"y\": 528, \"nom\": \"Kharkov\" },\n    \"Rostov\": { \"x\": 1671, \"y\": 618, \"nom\": \"Rostov\" },\n    \"Sochi\": { \"x\": 1660, \"y\": 770, \"nom\": \"Sochi\" },\n    \"Erzurum\": { \"x\": 1628, \"y\": 986, \"nom\": \"Erzurum\" },\n    \"Constantinople\": { \"x\": 1358, \"y\": 932, \"nom\": \"Constantinople\" },\n    \"Angora\": { \"x\": 1492, \"y\": 1026, \"nom\": \"Angora\" },\n    \"Smyrna\": { \"x\": 1282, \"y\": 1068, \"nom\": \"Smyrna\" },\n    \"Essen\": { \"x\": 663, \"y\": 335, \"nom\": \"Essen\" },\n    \"Berlin\": { \"x\": 834, \"y\": 359, \"nom\": \"Berlin\" },\n    \"Kobenhavn\": { \"x\": 784, \"y\": 155, \"nom\": \"Kobenhavn\" },\n    \"Stockholm\": { \"x\": 963, \"y\": 22, \"nom\": \"Stockholm\" },\n    \"Riga\": { \"x\": 1169, \"y\": 71, \"nom\": \"Riga\" },\n    \"Petrograd\": { \"x\": 1458, \"y\": 64, \"nom\": \"Petrograd\" },\n    \"Danzig\": { \"x\": 1028, \"y\": 226, \"nom\": \"Danzig\" },\n    \"Bucuresti\": { \"x\": 1271, \"y\": 721, \"nom\": \"Bucuresti\" },\n    \"Sevastopol\": { \"x\": 1508, \"y\": 746, \"nom\": \"Sevastopol\" }\n};\n\nexport const routesData = [\n    { \"ville1\": \"Amsterdam\", \"ville2\": \"Bruxelles\", \"longueur\": 1, \"couleur\": \"NOIR\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 504.5, \"y\": 361.5, \"dx\": -0.42661867571297646, \"dy\": 0.9044315925115101 }] },\n    { \"ville1\": \"Amsterdam\", \"ville2\": \"Essen\", \"longueur\": 3, \"couleur\": \"JAUNE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 528.5, \"y\": 276, \"dx\": 0.21871145691738075, \"dy\": -0.9757895770160064 }, { \"x\": 574, \"y\": 265, \"dx\": 0.9778024140774094, \"dy\": 0.20952908873087345 }, { \"x\": 629, \"y\": 300, \"dx\": 0.6368814469962913, \"dy\": 0.7709617516270895 }] },\n    { \"ville1\": \"Amsterdam\", \"ville2\": \"Frankfurt\", \"longueur\": 2, \"couleur\": \"BLANC\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 562, \"y\": 358.5, \"dx\": 0.6983238520753277, \"dy\": 0.7157819483772108 }, { \"x\": 606, \"y\": 403, \"dx\": 0.7249994335944138, \"dy\": 0.688749461914693 }] },\n    { \"ville1\": \"Amsterdam\", \"ville2\": \"London\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 2, \"segments\": [{ \"x\": 405, \"y\": 312, \"dx\": 1, \"dy\": 0 }, { \"x\": 469, \"y\": 314.5, \"dx\": 0.9998514005489976, \"dy\": 0.017238817250844786 }] },\n    { \"ville1\": \"Angora\", \"ville2\": \"Constantinople\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1399, \"y\": 959, \"dx\": 0.8209052017854871, \"dy\": 0.5710644881985998 }, { \"x\": 1452, \"y\": 998, \"dx\": 0.8041761414663255, \"dy\": 0.5943910610838058 }] },\n    { \"ville1\": \"Angora\", \"ville2\": \"Erzurum\", \"longueur\": 3, \"couleur\": \"NOIR\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1533.5, \"y\": 1046, \"dx\": 0.8765785507795943, \"dy\": 0.48125881219271843 }, { \"x\": 1597, \"y\": 1059.5, \"dx\": 0.9812488205210874, \"dy\": -0.19274530403092788 }, { \"x\": 1635.5, \"y\": 1031.5, \"dx\": -0.16148856811054085, \"dy\": -0.9868745828977495 }] },\n    { \"ville1\": \"Angora\", \"ville2\": \"Smyrna\", \"longueur\": 3, \"couleur\": \"ORANGE\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1329.5, \"y\": 1072.5, \"dx\": 0.9998347517133227, \"dy\": 0.01817881366751496 }, { \"x\": 1392.5, \"y\": 1072, \"dx\": 0.9895864392845114, \"dy\": -0.14393984571411075 }, { \"x\": 1455.5, \"y\": 1054, \"dx\": 0.8765785507795943, \"dy\": -0.48125881219271843 }] },\n    { \"ville1\": \"Athina\", \"ville2\": \"Brindisi\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [{ \"x\": 957, \"y\": 928, \"dx\": 0.389639990836698, \"dy\": 0.9209672510685588 }, { \"x\": 982, \"y\": 986.5, \"dx\": 0.38337767164151665, \"dy\": 0.9235916635000174 }, { \"x\": 1027.5, \"y\": 1030.5, \"dx\": 0.9554026409829016, \"dy\": 0.2953062708492605 }, { \"x\": 1093.5, \"y\": 1036, \"dx\": 0.9838699100999074, \"dy\": -0.17888543819998318 }] },\n    { \"ville1\": \"Athina\", \"ville2\": \"Sarajevo\", \"longueur\": 4, \"couleur\": \"VERT\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1052.5, \"y\": 859, \"dx\": -0.053494721371611896, \"dy\": 0.9985681322700888 }, { \"x\": 1049, \"y\": 922.5, \"dx\": -0.035066140133044446, \"dy\": 0.9993849937917667 }, { \"x\": 1045.5, \"y\": 986.5, \"dx\": -0.08444307668618062, \"dy\": 0.9964283048969312 }, { \"x\": 1087.5, \"y\": 1007, \"dx\": 0.9994259471398348, \"dy\": 0.033878845665757114 }] },\n    { \"ville1\": \"Athina\", \"ville2\": \"Smyrna\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [{ \"x\": 1180.5, \"y\": 1022, \"dx\": 0.9994259471398348, \"dy\": -0.033878845665757114 }, { \"x\": 1244.5, \"y\": 1036.5, \"dx\": 0.9044315925115101, \"dy\": 0.42661867571297646 }] },\n    { \"ville1\": \"Athina\", \"ville2\": \"Sofia\", \"longueur\": 3, \"couleur\": \"ROSE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1136, \"y\": 861, \"dx\": -0.6709133239691262, \"dy\": 0.7415357791237711 }, { \"x\": 1109.5, \"y\": 921, \"dx\": -0.11982016019085814, \"dy\": 0.9927956130099675 }, { \"x\": 1123, \"y\": 983, \"dx\": 0.52999894000318, \"dy\": 0.847998304005088 }] },\n    { \"ville1\": \"Barcelona\", \"ville2\": \"Madrid\", \"longueur\": 2, \"couleur\": \"JAUNE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 221.5, \"y\": 954.5, \"dx\": 0.9998563940539735, \"dy\": 0.016946718543287685 }, { \"x\": 285.5, \"y\": 956.5, \"dx\": 0.9986178293325098, \"dy\": 0.052558833122763673 }] },\n    { \"ville1\": \"Barcelona\", \"ville2\": \"Marseille\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 370.5, \"y\": 926, \"dx\": 0.6610305430689966, \"dy\": -0.7503589948350772 }, { \"x\": 415.5, \"y\": 881.5, \"dx\": 0.7407190347407712, \"dy\": -0.6718149384858157 }, { \"x\": 467.5, \"y\": 843.5, \"dx\": 0.8692901189279536, \"dy\": -0.4943022244884442 }, { \"x\": 525, \"y\": 818, \"dx\": 0.9377487607237036, \"dy\": -0.34731435582359393 }] },\n    { \"ville1\": \"Barcelona\", \"ville2\": \"Pamplona\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 322.5, \"y\": 852.5, \"dx\": 0.09053574604251853, \"dy\": 0.9958932064677039 }, { \"x\": 329.5, \"y\": 917.5, \"dx\": 0.11781773987828967, \"dy\": 0.9930352361170129 }] },\n    { \"ville1\": \"Berlin\", \"ville2\": \"Danzig\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 842.5, \"y\": 306.5, \"dx\": 0.1559625734730109, \"dy\": -0.987762965329069 }, { \"x\": 867.5, \"y\": 246.5, \"dx\": 0.5746304214759497, \"dy\": -0.8184130245263527 }, { \"x\": 922.5, \"y\": 210, \"dx\": 0.978549784986749, \"dy\": -0.2060104810498419 }, { \"x\": 987, \"y\": 210, \"dx\": 0.9778024140774094, \"dy\": 0.20952908873087345 }] },\n    { \"ville1\": \"Berlin\", \"ville2\": \"Essen\", \"longueur\": 2, \"couleur\": \"BLEU\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 726.5, \"y\": 331.5, \"dx\": 0.9925434552766405, \"dy\": 0.12189130152520146 }, { \"x\": 789.5, \"y\": 339, \"dx\": 0.9945054529214061, \"dy\": 0.10468478451804275 }] },\n    { \"ville1\": \"Berlin\", \"ville2\": \"Frankfurt\", \"longueur\": 3, \"couleur\": \"ROUGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 686.5, \"y\": 452.5, \"dx\": 0.9173450110960782, \"dy\": -0.3980931180228264 }, { \"x\": 743, \"y\": 424.5, \"dx\": 0.9012524245251862, \"dy\": -0.43329443486787794 }, { \"x\": 800, \"y\": 397.5, \"dx\": 0.9012524245251862, \"dy\": -0.43329443486787794 }] },\n    { \"ville1\": \"Berlin\", \"ville2\": \"Frankfurt\", \"longueur\": 3, \"couleur\": \"NOIR\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 676, \"y\": 432.5, \"dx\": 0.9012524245251862, \"dy\": -0.43329443486787794 }, { \"x\": 734, \"y\": 405.5, \"dx\": 0.9084904526785746, \"dy\": -0.41790560823214434 }, { \"x\": 790.5, \"y\": 378, \"dx\": 0.8909061469019802, \"dy\": -0.4541874474402252 }] },\n    { \"ville1\": \"Berlin\", \"ville2\": \"Warszawa\", \"longueur\": 4, \"couleur\": \"JAUNE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 877, \"y\": 365.5, \"dx\": 0.9469787003150827, \"dy\": -0.3212963447497602 }, { \"x\": 940, \"y\": 350.5, \"dx\": 0.988173903359179, \"dy\": -0.15333732983159673 }, { \"x\": 1003, \"y\": 347, \"dx\": 0.9993628543475496, \"dy\": -0.03569153051241249 }, { \"x\": 1065.5, \"y\": 350.5, \"dx\": 0.987762965329069, \"dy\": 0.1559625734730109 }] },\n    { \"ville1\": \"Berlin\", \"ville2\": \"Warszawa\", \"longueur\": 4, \"couleur\": \"ROSE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 875.5, \"y\": 341.5, \"dx\": 0.9486832980505138, \"dy\": -0.31622776601683794 }, { \"x\": 939.5, \"y\": 326.5, \"dx\": 0.9925434552766405, \"dy\": -0.12189130152520146 }, { \"x\": 1002, \"y\": 322, \"dx\": 0.9994059993535875, \"dy\": -0.03446227583977888 }, { \"x\": 1067, \"y\": 327, \"dx\": 0.9906211292434748, \"dy\": 0.13663739713703102 }] },\n    { \"ville1\": \"Berlin\", \"ville2\": \"Wien\", \"longueur\": 3, \"couleur\": \"VERT\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 847, \"y\": 408.5, \"dx\": 0.2890045919356118, \"dy\": 0.9573277107867141 }, { \"x\": 870.5, \"y\": 467, \"dx\": 0.47514891473488396, \"dy\": 0.8799053976571926 }, { \"x\": 906, \"y\": 520.5, \"dx\": 0.6246950475544243, \"dy\": 0.7808688094430304 }] },\n    { \"ville1\": \"Brest\", \"ville2\": \"Dieppe\", \"longueur\": 2, \"couleur\": \"ORANGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 225, \"y\": 482.5, \"dx\": 0.8650311892618034, \"dy\": -0.501718089771846 }, { \"x\": 287.5, \"y\": 464, \"dx\": 0.9977097021176764, \"dy\": -0.06764133573679162 }] },\n    { \"ville1\": \"Brest\", \"ville2\": \"Pamplona\", \"longueur\": 4, \"couleur\": \"ROSE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 229.5, \"y\": 549.5, \"dx\": 0.9342183861793726, \"dy\": 0.3567015656321241 }, { \"x\": 280, \"y\": 591, \"dx\": 0.5547001962252291, \"dy\": 0.8320502943378437 }, { \"x\": 302, \"y\": 652, \"dx\": 0.1414213562373095, \"dy\": 0.9899494936611665 }, { \"x\": 306, \"y\": 716, \"dx\": 0, \"dy\": 1 }] },\n    { \"ville1\": \"Brest\", \"ville2\": \"Paris\", \"longueur\": 3, \"couleur\": \"NOIR\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 235, \"y\": 521, \"dx\": 0.9946917938265513, \"dy\": 0.1028991510855053 }, { \"x\": 298.5, \"y\": 529, \"dx\": 0.9945054529214061, \"dy\": 0.10468478451804275 }, { \"x\": 360.5, \"y\": 536.5, \"dx\": 0.9964283048969312, \"dy\": 0.08444307668618062 }] },\n    { \"ville1\": \"Brindisi\", \"ville2\": \"Palermo\", \"longueur\": 3, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [{ \"x\": 880.5, \"y\": 1047.5, \"dx\": 0.6139406135149205, \"dy\": -0.7893522173763263 }, { \"x\": 923, \"y\": 998.5, \"dx\": 0.7327934916262993, \"dy\": -0.6804510993672779 }, { \"x\": 936.5, \"y\": 937, \"dx\": -0.40450601477770304, \"dy\": -0.9145353377582851 }] },\n    { \"ville1\": \"Brindisi\", \"ville2\": \"Roma\", \"longueur\": 2, \"couleur\": \"BLANC\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 832.5, \"y\": 833, \"dx\": 0.9902939771518443, \"dy\": -0.13898862837218867 }, { \"x\": 892.5, \"y\": 856, \"dx\": 0.6610305430689966, \"dy\": 0.7503589948350772 }] },\n    { \"ville1\": \"Bruxelles\", \"ville2\": \"Dieppe\", \"longueur\": 2, \"couleur\": \"VERT\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 387, \"y\": 447.5, \"dx\": 0.8346094065617252, \"dy\": -0.5508422083307386 }, { \"x\": 440, \"y\": 411, \"dx\": 0.8041761414663255, \"dy\": -0.5943910610838058 }] },\n    { \"ville1\": \"Bruxelles\", \"ville2\": \"Frankfurt\", \"longueur\": 2, \"couleur\": \"BLEU\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 528.5, \"y\": 403, \"dx\": 0.9690971739229421, \"dy\": -0.24667928063493072 }, { \"x\": 590.5, \"y\": 420, \"dx\": 0.7321867381630838, \"dy\": 0.6811039424772872 }] },\n    { \"ville1\": \"Bruxelles\", \"ville2\": \"Paris\", \"longueur\": 2, \"couleur\": \"JAUNE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 432.5, \"y\": 495, \"dx\": 0.47312663795681303, \"dy\": -0.8809944292988933 }, { \"x\": 462.5, \"y\": 439, \"dx\": 0.43329443486787794, \"dy\": -0.9012524245251862 }] },\n    { \"ville1\": \"Bruxelles\", \"ville2\": \"Paris\", \"longueur\": 2, \"couleur\": \"ROUGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 452.5, \"y\": 505.5, \"dx\": 0.4678877204190327, \"dy\": -0.8837879163470618 }, { \"x\": 482.5, \"y\": 449.5, \"dx\": 0.4678877204190327, \"dy\": -0.8837879163470618 }] },\n    { \"ville1\": \"Bucuresti\", \"ville2\": \"Budapest\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1058, \"y\": 613.5, \"dx\": 0.8944271909999159, \"dy\": 0.4472135954999579 }, { \"x\": 1114.5, \"y\": 644, \"dx\": 0.8833490206949295, \"dy\": 0.46871580689935033 }, { \"x\": 1170, \"y\": 674, \"dx\": 0.8872168012345951, \"dy\": 0.46135273664198945 }, { \"x\": 1227, \"y\": 703.5, \"dx\": 0.8944271909999159, \"dy\": 0.4472135954999579 }] },\n    { \"ville1\": \"Bucuresti\", \"ville2\": \"Constantinople\", \"longueur\": 3, \"couleur\": \"JAUNE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1289.5, \"y\": 766, \"dx\": 0.40450601477770304, \"dy\": 0.9145353377582851 }, { \"x\": 1314.5, \"y\": 824, \"dx\": 0.39186206512519167, \"dy\": 0.9200239789895804 }, { \"x\": 1339, \"y\": 882, \"dx\": 0.4061384660534476, \"dy\": 0.9138115486202572 }] },\n    { \"ville1\": \"Bucuresti\", \"ville2\": \"Kyiv\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1337, \"y\": 492, \"dx\": -0.284088329691374, \"dy\": 0.9587981127083872 }, { \"x\": 1317.5, \"y\": 552, \"dx\": -0.343192952923539, \"dy\": 0.9392649237907383 }, { \"x\": 1298, \"y\": 612.5, \"dx\": -0.3215824263578902, \"dy\": 0.9468815887204546 }, { \"x\": 1278, \"y\": 672, \"dx\": -0.3271105638831663, \"dy\": 0.9449860734402582 }] },\n    { \"ville1\": \"Bucuresti\", \"ville2\": \"Sevastopol\", \"longueur\": 4, \"couleur\": \"BLANC\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1307.5, \"y\": 690.5, \"dx\": 0.7071067811865476, \"dy\": -0.7071067811865476 }, { \"x\": 1365, \"y\": 657.5, \"dx\": 0.965948051503245, \"dy\": -0.2587360852240835 }, { \"x\": 1430.5, \"y\": 665, \"dx\": 0.9040722665053037, \"dy\": 0.4273796168934163 }, { \"x\": 1480.5, \"y\": 705, \"dx\": 0.6055218324832624, \"dy\": 0.7958286941208591 }] },\n    { \"ville1\": \"Bucuresti\", \"ville2\": \"Sofia\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1209.5, \"y\": 809.5, \"dx\": 0.9582877607731983, \"dy\": -0.28580512163411176 }, { \"x\": 1250, \"y\": 762.5, \"dx\": 0.13436367297357807, \"dy\": -0.9909320881801382 }] },\n    { \"ville1\": \"Budapest\", \"ville2\": \"Kyiv\", \"longueur\": 6, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1037.5, \"y\": 561, \"dx\": 0.6633075143158518, \"dy\": -0.7483469392281404 }, { \"x\": 1084, \"y\": 518, \"dx\": 0.8209052017854871, \"dy\": -0.5710644881985998 }, { \"x\": 1139, \"y\": 483.5, \"dx\": 0.8799053976571926, \"dy\": -0.47514891473488396 }, { \"x\": 1197.5, \"y\": 459, \"dx\": 0.9468815887204546, \"dy\": -0.3215824263578902 }, { \"x\": 1260, \"y\": 446, \"dx\": 0.9974586998307351, \"dy\": -0.07124704998790965 }, { \"x\": 1324, \"y\": 446.5, \"dx\": 0.9998405993454448, \"dy\": 0.017854296416882943 }] },\n    { \"ville1\": \"Budapest\", \"ville2\": \"Sarajevo\", \"longueur\": 3, \"couleur\": \"ROSE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1026, \"y\": 646.5, \"dx\": 0.14393984571411075, \"dy\": 0.9895864392845114 }, { \"x\": 1035, \"y\": 709, \"dx\": 0.1757906384836575, \"dy\": 0.984427575508482 }, { \"x\": 1044.5, \"y\": 772, \"dx\": 0.12403473458920845, \"dy\": 0.9922778767136676 }] },\n    { \"ville1\": \"Budapest\", \"ville2\": \"Wien\", \"longueur\": 1, \"couleur\": \"ROUGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 973.5, \"y\": 578, \"dx\": 0.8528513040762654, \"dy\": 0.5221538596385299 }] },\n    { \"ville1\": \"Budapest\", \"ville2\": \"Wien\", \"longueur\": 1, \"couleur\": \"BLANC\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 962, \"y\": 596, \"dx\": 0.8574929257125442, \"dy\": 0.5144957554275266 }] },\n    { \"ville1\": \"Budapest\", \"ville2\": \"Zagrab\", \"longueur\": 2, \"couleur\": \"ORANGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 987.5, \"y\": 639, \"dx\": -0.501718089771846, \"dy\": 0.8650311892618034 }, { \"x\": 946.5, \"y\": 689.5, \"dx\": -0.7724254859909581, \"dy\": 0.6351053995925655 }] },\n    { \"ville1\": \"Cadiz\", \"ville2\": \"Lisboa\", \"longueur\": 2, \"couleur\": \"BLEU\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 50, \"y\": 1025.5, \"dx\": 0.4125075533080444, \"dy\": 0.9109541802219313 }, { \"x\": 100, \"y\": 1063.5, \"dx\": 0.9812488205210874, \"dy\": 0.19274530403092788 }] },\n    { \"ville1\": \"Cadiz\", \"ville2\": \"Madrid\", \"longueur\": 3, \"couleur\": \"ORANGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 189, \"y\": 1062, \"dx\": 0.9377487607237036, \"dy\": -0.34731435582359393 }, { \"x\": 222.5, \"y\": 1027.5, \"dx\": -0.3265202527980472, \"dy\": -0.9451902054680315 }, { \"x\": 184.5, \"y\": 976, \"dx\": -0.7493290854811462, \"dy\": -0.6621977964717106 }] },\n    { \"ville1\": \"Constantinople\", \"ville2\": \"Sevastopol\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 2, \"segments\": [{ \"x\": 1490.5, \"y\": 791.5, \"dx\": -0.017541160386140585, \"dy\": 0.9998461420100133 }, { \"x\": 1471, \"y\": 852.5, \"dx\": -0.5795237863600037, \"dy\": 0.8149553245687551 }, { \"x\": 1428.5, \"y\": 874, \"dx\": -0.7938781460016401, \"dy\": -0.6080768777884903 }, { \"x\": 1386.5, \"y\": 896.5, \"dx\": -0.6139406135149205, \"dy\": 0.7893522173763263 }] },\n    { \"ville1\": \"Constantinople\", \"ville2\": \"Smyrna\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1301.5, \"y\": 1026.5, \"dx\": 0.42661867571297646, \"dy\": -0.9044315925115101 }, { \"x\": 1330.5, \"y\": 968.5, \"dx\": 0.41110775310681835, \"dy\": -0.911586756889032 }] },\n    { \"ville1\": \"Constantinople\", \"ville2\": \"Sofia\", \"longueur\": 3, \"couleur\": \"BLEU\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1206, \"y\": 853, \"dx\": 0.8725060159497201, \"dy\": 0.48860336893184325 }, { \"x\": 1262, \"y\": 883, \"dx\": 0.879291966536774, \"dy\": 0.4762831485407526 }, { \"x\": 1317, \"y\": 913.5, \"dx\": 0.8650311892618034, \"dy\": 0.501718089771846 }] },\n    { \"ville1\": \"Danzig\", \"ville2\": \"Riga\", \"longueur\": 3, \"couleur\": \"NOIR\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1041.5, \"y\": 182.5, \"dx\": 0.27232246579934893, \"dy\": -0.9622060458243663 }, { \"x\": 1071, \"y\": 125.5, \"dx\": 0.6028330891856919, \"dy\": -0.7978673239222394 }, { \"x\": 1123.5, \"y\": 89, \"dx\": 0.9503971290446889, \"dy\": -0.3110390604146254 }] },\n    { \"ville1\": \"Danzig\", \"ville2\": \"Warszawa\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1068, \"y\": 247, \"dx\": 0.847998304005088, \"dy\": 0.52999894000318 }, { \"x\": 1103.5, \"y\": 299, \"dx\": 0.22612970719934952, \"dy\": 0.9740972002433518 }] },\n    {\n        \"ville1\": \"Dieppe\", \"ville2\": \"London\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [\n            { \"x\": 330.5, \"y\": 419.5, \"dx\": -0.08738374771484403, \"dy\": 0.9961747239492219 },\n            { \"x\": 336.5, \"y\": 358, \"dx\": -0.08588834215301201, \"dy\": 0.9963047689749394 }, \n        ]\n    },\n    { \"ville1\": \"Dieppe\", \"ville2\": \"London\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [{ \"x\": 354.5, \"y\": 422.5, \"dx\": 0.08444307668618062, \"dy\": -0.9964283048969312 }, { \"x\": 360, \"y\": 359.5, \"dx\": 0.10468478451804275, \"dy\": -0.9945054529214061 }] },\n    { \"ville1\": \"Dieppe\", \"ville2\": \"Paris\", \"longueur\": 1, \"couleur\": \"ROSE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 379.5, \"y\": 500.5, \"dx\": 0.7071067811865475, \"dy\": 0.7071067811865475 }] },\n    { \"ville1\": \"Edinburgh\", \"ville2\": \"London\", \"longueur\": 4, \"couleur\": \"ORANGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 276.5, \"y\": 96, \"dx\": 0.42012356811103757, \"dy\": 0.9074669071198412 }, { \"x\": 301, \"y\": 154.5, \"dx\": 0.38337767164151665, \"dy\": 0.9235916635000174 }, { \"x\": 325, \"y\": 212, \"dx\": 0.389639990836698, \"dy\": 0.9209672510685588 }, { \"x\": 349.5, \"y\": 269.5, \"dx\": 0.3980931180228264, \"dy\": 0.9173450110960782 }] },\n    { \"ville1\": \"Edinburgh\", \"ville2\": \"London\", \"longueur\": 4, \"couleur\": \"NOIR\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 255.5, \"y\": 105.5, \"dx\": 0.41110775310681835, \"dy\": 0.911586756889032 }, { \"x\": 280.5, \"y\": 163.5, \"dx\": 0.3980931180228264, \"dy\": 0.9173450110960782 }, { \"x\": 305, \"y\": 220, \"dx\": 0.40273861426601687, \"dy\": 0.9153150324227656 }, { \"x\": 329, \"y\": 277.5, \"dx\": 0.3960911114346502, \"dy\": 0.9182112128712345 }] },\n    { \"ville1\": \"Erzurum\", \"ville2\": \"Sevastopol\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 2, \"segments\": [{ \"x\": 1514, \"y\": 792, \"dx\": 0, \"dy\": 1 }, { \"x\": 1518.5, \"y\": 854, \"dx\": 0.15867809538375516, \"dy\": 0.9873303712766988 }, { \"x\": 1542, \"y\": 914, \"dx\": 0.5710644881985998, \"dy\": 0.8209052017854871 }, { \"x\": 1588.5, \"y\": 960, \"dx\": 0.8372705045624257, \"dy\": 0.546788900938727 }] },\n    { \"ville1\": \"Erzurum\", \"ville2\": \"Sochi\", \"longueur\": 3, \"couleur\": \"ROUGE\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1653.5, \"y\": 817, \"dx\": -0.12403473458920845, \"dy\": 0.9922778767136676 }, { \"x\": 1644.5, \"y\": 880, \"dx\": -0.15867809538375516, \"dy\": 0.9873303712766988 }, { \"x\": 1635.5, \"y\": 942.5, \"dx\": -0.12625427967391514, \"dy\": 0.9919979117236188 }] },\n    { \"ville1\": \"Essen\", \"ville2\": \"Frankfurt\", \"longueur\": 2, \"couleur\": \"VERT\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 666, \"y\": 412, \"dx\": 0.8944271909999159, \"dy\": -0.4472135954999579 }, { \"x\": 698, \"y\": 374.5, \"dx\": -0.4541874474402252, \"dy\": -0.8909061469019802 }] },\n    { \"ville1\": \"Essen\", \"ville2\": \"Kobenhavn\", \"longueur\": 3, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [{ \"x\": 677, \"y\": 288, \"dx\": 0.5390536964233673, \"dy\": -0.8422714006615114 }, { \"x\": 713, \"y\": 235, \"dx\": 0.5547001962252291, \"dy\": -0.8320502943378437 }, { \"x\": 748, \"y\": 182, \"dx\": 0.5547001962252291, \"dy\": -0.8320502943378437 }] },\n    { \"ville1\": \"Essen\", \"ville2\": \"Kobenhavn\", \"longueur\": 3, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [{ \"x\": 695.5, \"y\": 300, \"dx\": 0.5665288228870652, \"dy\": -0.8240419241993676 }, { \"x\": 731, \"y\": 246, \"dx\": 0.5462677805469223, \"dy\": -0.8376105968386142 }, { \"x\": 765.5, \"y\": 196, \"dx\": 0.5665288228870652, \"dy\": -0.8240419241993676 }] },\n    { \"ville1\": \"Frankfurt\", \"ville2\": \"Munchen\", \"longueur\": 2, \"couleur\": \"ROSE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 654, \"y\": 500, \"dx\": 0.31622776601683794, \"dy\": 0.9486832980505138 }, { \"x\": 684.5, \"y\": 534.5, \"dx\": 0.9582877607731983, \"dy\": -0.28580512163411176 }] },\n    { \"ville1\": \"Frankfurt\", \"ville2\": \"Paris\", \"longueur\": 3, \"couleur\": \"ORANGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 494, \"y\": 553.5, \"dx\": 0.9568805766427723, \"dy\": -0.29048160362369874 }, { \"x\": 552, \"y\": 527, \"dx\": 0.8422714006615114, \"dy\": -0.5390536964233673 }, { \"x\": 605.5, \"y\": 491.5, \"dx\": 0.8137334712067349, \"dy\": -0.5812381937190964 }] },\n    { \"ville1\": \"Frankfurt\", \"ville2\": \"Paris\", \"longueur\": 3, \"couleur\": \"BLANC\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 482.5, \"y\": 533, \"dx\": 0.939793423488437, \"dy\": -0.3417430630867044 }, { \"x\": 541, \"y\": 506.5, \"dx\": 0.8400393777687709, \"dy\": -0.5425254314756646 }, { \"x\": 594, \"y\": 471.5, \"dx\": 0.8240419241993676, \"dy\": -0.5665288228870652 }] },\n    { \"ville1\": \"Kharkov\", \"ville2\": \"Kyiv\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1386, \"y\": 482, \"dx\": 0.34731435582359393, \"dy\": 0.9377487607237036 }, { \"x\": 1428, \"y\": 531, \"dx\": 0.8804710999221753, \"dy\": 0.47409982303501746 }, { \"x\": 1490.5, \"y\": 547.5, \"dx\": 0.9986178293325098, \"dy\": 0.052558833122763673 }, { \"x\": 1554, \"y\": 540, \"dx\": 0.9486832980505138, \"dy\": -0.31622776601683794 }] },\n    { \"ville1\": \"Kharkov\", \"ville2\": \"Moskva\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1628.5, \"y\": 491, \"dx\": 0.6985367247883851, \"dy\": -0.7155742058807848 }, { \"x\": 1661.5, \"y\": 437, \"dx\": 0.2676438637860946, \"dy\": -0.9635179096299405 }, { \"x\": 1666, \"y\": 372, \"dx\": -0.1414213562373095, \"dy\": -0.9899494936611665 }, { \"x\": 1647, \"y\": 309.5, \"dx\": -0.4541874474402252, \"dy\": -0.8909061469019802 }] },\n    { \"ville1\": \"Kharkov\", \"ville2\": \"Rostov\", \"longueur\": 2, \"couleur\": \"VERT\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1651, \"y\": 528, \"dx\": 1, \"dy\": 0 }, { \"x\": 1670.5, \"y\": 573.5, \"dx\": 0.017541160386140585, \"dy\": 0.9998461420100133 }] },\n    { \"ville1\": \"Kobenhavn\", \"ville2\": \"Stockholm\", \"longueur\": 3, \"couleur\": \"JAUNE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 808.5, \"y\": 114, \"dx\": 0.6804510993672779, \"dy\": -0.7327934916262993 }, { \"x\": 855, \"y\": 70.5, \"dx\": 0.7483469392281404, \"dy\": -0.6633075143158518 }, { \"x\": 908, \"y\": 34, \"dx\": 0.8804710999221753, \"dy\": -0.47409982303501746 }] },\n    { \"ville1\": \"Kobenhavn\", \"ville2\": \"Stockholm\", \"longueur\": 3, \"couleur\": \"BLANC\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 825, \"y\": 132, \"dx\": 0.6896551724137931, \"dy\": -0.7241379310344828 }, { \"x\": 870, \"y\": 87.5, \"dx\": 0.7503589948350772, \"dy\": -0.6610305430689966 }, { \"x\": 923.5, \"y\": 50.5, \"dx\": 0.8837879163470618, \"dy\": -0.4678877204190327 }] },\n    { \"ville1\": \"Kyiv\", \"ville2\": \"Smolensk\", \"longueur\": 3, \"couleur\": \"ROUGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1418.5, \"y\": 440.5, \"dx\": 0.9986178293325098, \"dy\": 0.052558833122763673 }, { \"x\": 1477.5, \"y\": 417, \"dx\": 0.7157819483772108, \"dy\": -0.6983238520753277 }, { \"x\": 1492, \"y\": 355.5, \"dx\": -0.2890045919356118, \"dy\": -0.9573277107867141 }] },\n    { \"ville1\": \"Kyiv\", \"ville2\": \"Warszawa\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1143.5, \"y\": 376.5, \"dx\": 0.689213765997513, \"dy\": 0.7245580616896932 }, { \"x\": 1196, \"y\": 413, \"dx\": 0.9377487607237036, \"dy\": 0.34731435582359393 }, { \"x\": 1258.5, \"y\": 422.5, \"dx\": 0.9986178293325098, \"dy\": -0.052558833122763673 }, { \"x\": 1322.5, \"y\": 423.5, \"dx\": 0.9986178293325098, \"dy\": 0.052558833122763673 }] },\n    { \"ville1\": \"Kyiv\", \"ville2\": \"Wilno\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1344, \"y\": 330.5, \"dx\": 0.8400393777687709, \"dy\": 0.5425254314756646 }, { \"x\": 1372, \"y\": 389.5, \"dx\": 0, \"dy\": 1 }] },\n    { \"ville1\": \"Lisboa\", \"ville2\": \"Madrid\", \"longueur\": 3, \"couleur\": \"ROSE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 30, \"y\": 940, \"dx\": 0, \"dy\": -1 }, { \"x\": 49.5, \"y\": 896, \"dx\": 0.9994259471398348, \"dy\": 0.033878845665757114 }, { \"x\": 111, \"y\": 917.5, \"dx\": 0.8080075302163774, \"dy\": 0.5891721574494418 }] },\n    { \"ville1\": \"Madrid\", \"ville2\": \"Pamplona\", \"longueur\": 3, \"couleur\": \"BLANC\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 186, \"y\": 920.5, \"dx\": 0.6419366564593427, \"dy\": -0.7667576729931038 }, { \"x\": 229, \"y\": 874, \"dx\": 0.7071067811865475, \"dy\": -0.7071067811865475 }, { \"x\": 278.5, \"y\": 833, \"dx\": 0.8372705045624257, \"dy\": -0.546788900938727 }] },\n    { \"ville1\": \"Madrid\", \"ville2\": \"Pamplona\", \"longueur\": 3, \"couleur\": \"NOIR\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 171, \"y\": 905, \"dx\": 0.6536198703460924, \"dy\": -0.7568230077691596 }, { \"x\": 212.5, \"y\": 857, \"dx\": 0.6804510993672779, \"dy\": -0.7327934916262993 }, { \"x\": 261, \"y\": 817, \"dx\": 0.8422714006615114, \"dy\": -0.5390536964233673 }] },\n    { \"ville1\": \"Marseille\", \"ville2\": \"Pamplona\", \"longueur\": 4, \"couleur\": \"ROUGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 367.5, \"y\": 823, \"dx\": 0.9503971290446889, \"dy\": 0.3110390604146254 }, { \"x\": 401, \"y\": 790.5, \"dx\": 0.35305725243424235, \"dy\": -0.9356017189507422 }, { \"x\": 452.5, \"y\": 753.5, \"dx\": 0.9998461420100133, \"dy\": -0.017541160386140585 }, { \"x\": 516.5, \"y\": 770.5, \"dx\": 0.8979207227269799, \"dy\": 0.44015721702302935 }] },\n    { \"ville1\": \"Marseille\", \"ville2\": \"Paris\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 553, \"y\": 756, \"dx\": -0.5547001962252291, \"dy\": -0.8320502943378437 }, { \"x\": 505.5, \"y\": 713.5, \"dx\": -0.8837879163470618, \"dy\": -0.4678877204190327 }, { \"x\": 457, \"y\": 670.5, \"dx\": -0.5700815482062942, \"dy\": -0.821588113591424 }, { \"x\": 436.5, \"y\": 608.5, \"dx\": -0.054464493159869794, \"dy\": -0.9985157079309461 }] },\n    { \"ville1\": \"Marseille\", \"ville2\": \"Roma\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 620, \"y\": 778, \"dx\": 0.8041761414663255, \"dy\": -0.5943910610838058 }, { \"x\": 671, \"y\": 741.5, \"dx\": 0.8, \"dy\": -0.6 }, { \"x\": 712, \"y\": 762.5, \"dx\": 0.6028330891856919, \"dy\": 0.7978673239222394 }, { \"x\": 750, \"y\": 813.5, \"dx\": 0.6028330891856919, \"dy\": 0.7978673239222394 }] },\n    { \"ville1\": \"Marseille\", \"ville2\": \"Zurich\", \"longueur\": 2, \"couleur\": \"ROSE\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 615, \"y\": 683.5, \"dx\": -0.2553911228370322, \"dy\": 0.9668378221687647 }, { \"x\": 599, \"y\": 746.5, \"dx\": -0.2890045919356118, \"dy\": 0.9573277107867141 }] },\n    { \"ville1\": \"Moskva\", \"ville2\": \"Petrograd\", \"longueur\": 4, \"couleur\": \"BLANC\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1504, \"y\": 79.5, \"dx\": 0.9538492507391959, \"dy\": 0.30028587523270983 }, { \"x\": 1561, \"y\": 110, \"dx\": 0.8041761414663255, \"dy\": 0.5943910610838058 }, { \"x\": 1600, \"y\": 161, \"dx\": 0.4472135954999579, \"dy\": 0.8944271909999159 }, { \"x\": 1617, \"y\": 222, \"dx\": 0.07124704998790965, \"dy\": 0.9974586998307351 }] },\n    { \"ville1\": \"Moskva\", \"ville2\": \"Smolensk\", \"longueur\": 2, \"couleur\": \"ORANGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1526, \"y\": 314, \"dx\": 0.994309153919809, \"dy\": 0.10653312363426524 }, { \"x\": 1587, \"y\": 295.5, \"dx\": 0.8080075302163774, \"dy\": -0.5891721574494418 }] },\n    { \"ville1\": \"Munchen\", \"ville2\": \"Venezia\", \"longueur\": 2, \"couleur\": \"BLEU\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 742, \"y\": 587, \"dx\": 0.18208926018230742, \"dy\": 0.9832820049844601 }, { \"x\": 754, \"y\": 651, \"dx\": 0.20952908873087345, \"dy\": 0.9778024140774094 }] },\n    { \"ville1\": \"Munchen\", \"ville2\": \"Wien\", \"longueur\": 3, \"couleur\": \"ORANGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 768.5, \"y\": 566, \"dx\": 0.6055218324832624, \"dy\": 0.7958286941208591 }, { \"x\": 826, \"y\": 594.5, \"dx\": 0.9986649849421085, \"dy\": 0.0516550854280401 }, { \"x\": 887, \"y\": 574.5, \"dx\": 0.7792134503124135, \"dy\": -0.6267586448165066 }] },\n    { \"ville1\": \"Munchen\", \"ville2\": \"Zurich\", \"longueur\": 2, \"couleur\": \"JAUNE\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 656.5, \"y\": 609.5, \"dx\": 0.7407190347407712, \"dy\": -0.6718149384858157 }, { \"x\": 702.5, \"y\": 564, \"dx\": 0.7321867381630838, \"dy\": -0.6811039424772872 }] },\n    {\n        \"ville1\": \"Palermo\", \"ville2\": \"Roma\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [\n            { \"x\": 864, \"y\": 1032, \"dx\": -0.5943910610838058, \"dy\": 0.8041761414663255 },\n            { \"x\": 884.5, \"y\": 972, \"dx\": -0.017238817250844786, \"dy\": 0.9998514005489976 },\n            { \"x\": 866, \"y\": 911, \"dx\": 0.6163082616581107, \"dy\": 0.7875050010075858 },\n            { \"x\": 818, \"y\": 867.5, \"dx\": 0.8799053976571926, \"dy\": 0.47514891473488396 },\n        ]\n    },\n    {\n        \"ville1\": \"Palermo\", \"ville2\": \"Smyrna\", \"longueur\": 6, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 2, \"segments\": [\n            { \"x\": 1236.5, \"y\": 1069, \"dx\": 1, \"dy\": 0 },\n            { \"x\": 1172.5, \"y\": 1069, \"dx\": 1, \"dy\": 0 },\n            { \"x\": 1110.5, \"y\": 1069, \"dx\": 1, \"dy\": 0 },\n            { \"x\": 1048.5, \"y\": 1069, \"dx\": 1, \"dy\": 0 },\n            { \"x\": 984, \"y\": 1069, \"dx\": 1, \"dy\": 0 },\n            { \"x\": 920, \"y\": 1069, \"dx\": 1, \"dy\": 0 },\n        ]\n    },\n    { \"ville1\": \"Pamplona\", \"ville2\": \"Paris\", \"longueur\": 4, \"couleur\": \"BLEU\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 321.5, \"y\": 763, \"dx\": 0.5891721574494418, \"dy\": -0.8080075302163774 }, { \"x\": 353.5, \"y\": 706.5, \"dx\": 0.34570535882735637, \"dy\": -0.9383431168171101 }, { \"x\": 374, \"y\": 647, \"dx\": 0.24253562503633297, \"dy\": -0.9701425001453319 }, { \"x\": 387.5, \"y\": 584, \"dx\": 0.15333732983159673, \"dy\": -0.988173903359179 }] },\n    { \"ville1\": \"Pamplona\", \"ville2\": \"Paris\", \"longueur\": 4, \"couleur\": \"VERT\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 343.5, \"y\": 770.5, \"dx\": 0.597266145998167, \"dy\": -0.8020431103403957 }, { \"x\": 376, \"y\": 713, \"dx\": 0.37729688731351946, \"dy\": -0.9260923597695477 }, { \"x\": 397, \"y\": 654, \"dx\": 0.27472112789737807, \"dy\": -0.9615239476408232 }, { \"x\": 410.5, \"y\": 592, \"dx\": 0.11982016019085814, \"dy\": -0.9927956130099675 }] },\n    { \"ville1\": \"Paris\", \"ville2\": \"Zurich\", \"longueur\": 3, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 468.5, \"y\": 594, \"dx\": 0.5171156399255817, \"dy\": 0.8559155419457903 }, { \"x\": 515.5, \"y\": 636.5, \"dx\": 0.9052369440730288, \"dy\": 0.4249071370138707 }, { \"x\": 578.5, \"y\": 650, \"dx\": 1, \"dy\": 0 }] },\n    { \"ville1\": \"Petrograd\", \"ville2\": \"Riga\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1216.5, \"y\": 73, \"dx\": 1, \"dy\": 0 }, { \"x\": 1281, \"y\": 74, \"dx\": 0.9993628543475496, \"dy\": -0.03569153051241249 }, { \"x\": 1344, \"y\": 72, \"dx\": 0.9993148337667671, \"dy\": -0.037011660509880265 }, { \"x\": 1407, \"y\": 71.5, \"dx\": 0.9985681322700888, \"dy\": -0.053494721371611896 }] },\n    { \"ville1\": \"Petrograd\", \"ville2\": \"Stockholm\", \"longueur\": 8, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 994, \"y\": 57, \"dx\": 0.6332377902572627, \"dy\": 0.773957299203321 }, { \"x\": 1040, \"y\": 48, \"dx\": 0.8041761414663255, \"dy\": -0.5943910610838058 }, { \"x\": 1099.5, \"y\": 26.5, \"dx\": 0.9998347517133227, \"dy\": 0.01817881366751496 }, { \"x\": 1163, \"y\": 26.5, \"dx\": 0.9998405993454448, \"dy\": 0.017854296416882943 }, { \"x\": 1226.5, \"y\": 25.5, \"dx\": 0.9998461420100133, \"dy\": -0.017541160386140585 }, { \"x\": 1289.5, \"y\": 26, \"dx\": 1, \"dy\": 0 }, { \"x\": 1352.5, \"y\": 26.5, \"dx\": 0.9998347517133227, \"dy\": -0.01817881366751496 }, { \"x\": 1416.5, \"y\": 39, \"dx\": 0.9165393783696333, \"dy\": 0.39994445601584 }] },\n    { \"ville1\": \"Petrograd\", \"ville2\": \"Wilno\", \"longueur\": 4, \"couleur\": \"BLEU\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1326, \"y\": 261, \"dx\": 0.5943910610838058, \"dy\": -0.8041761414663255 }, { \"x\": 1364, \"y\": 209.5, \"dx\": 0.5627909770820216, \"dy\": -0.8265992475892192 }, { \"x\": 1400.5, \"y\": 158, \"dx\": 0.5829078754517308, \"dy\": -0.8125382506296854 }, { \"x\": 1437, \"y\": 107.5, \"dx\": 0.5861197865287227, \"dy\": -0.8102244107897049 }] },\n    { \"ville1\": \"Riga\", \"ville2\": \"Wilno\", \"longueur\": 4, \"couleur\": \"VERT\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1167, \"y\": 119, \"dx\": -0.16990691650764622, \"dy\": 0.985460115744348 }, { \"x\": 1175, \"y\": 182, \"dx\": 0.4190581774617469, \"dy\": 0.9079593845004517 }, { \"x\": 1216, \"y\": 230.5, \"dx\": 0.8559155419457903, \"dy\": 0.5171156399255817 }, { \"x\": 1270, \"y\": 264.5, \"dx\": 0.8400393777687709, \"dy\": 0.5425254314756646 }] },\n    { \"ville1\": \"Roma\", \"ville2\": \"Venezia\", \"longueur\": 2, \"couleur\": \"NOIR\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 772.5, \"y\": 740, \"dx\": 0.19274530403092788, \"dy\": 0.9812488205210874 }, { \"x\": 784, \"y\": 803.5, \"dx\": 0.17888543819998318, \"dy\": 0.9838699100999074 }] },\n    { \"ville1\": \"Rostov\", \"ville2\": \"Sevastopol\", \"longueur\": 4, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1526, \"y\": 703, \"dx\": 0.13663739713703102, \"dy\": -0.9906211292434748 }, { \"x\": 1534.5, \"y\": 640, \"dx\": 0.15867809538375516, \"dy\": -0.9873303712766988 }, { \"x\": 1561, \"y\": 598, \"dx\": 0.9906211292434748, \"dy\": 0.13663739713703102 }, { \"x\": 1623.5, \"y\": 609, \"dx\": 0.9849570246463139, \"dy\": 0.17279947800812523 }] },\n    { \"ville1\": \"Rostov\", \"ville2\": \"Sochi\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1667.5, \"y\": 663, \"dx\": -0.053494721371611896, \"dy\": 0.9985681322700888 }, { \"x\": 1664, \"y\": 726.5, \"dx\": -0.07000328148073091, \"dy\": 0.9975467611004155 }] },\n    { \"ville1\": \"Sarajevo\", \"ville2\": \"Sofia\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 1096, \"y\": 793, \"dx\": 0.9079593845004517, \"dy\": -0.4190581774617469 }, { \"x\": 1143.5, \"y\": 792, \"dx\": 0.47514891473488396, \"dy\": 0.8799053976571926 }] },\n    { \"ville1\": \"Sarajevo\", \"ville2\": \"Zagrab\", \"longueur\": 3, \"couleur\": \"ROUGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 913.5, \"y\": 761.5, \"dx\": 0.12189130152520146, \"dy\": 0.9925434552766405 }, { \"x\": 946, \"y\": 815.5, \"dx\": 0.8125382506296854, \"dy\": 0.5829078754517308 }, { \"x\": 1010, \"y\": 825.5, \"dx\": 0.9433123908373908, \"dy\": -0.3319062115909338 }] },\n    { \"ville1\": \"Sevastopol\", \"ville2\": \"Sochi\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 1, \"segments\": [{ \"x\": 1554, \"y\": 753, \"dx\": 0.9899494936611665, \"dy\": 0.1414213562373095 }, { \"x\": 1616, \"y\": 763, \"dx\": 0.9899494936611665, \"dy\": 0.1414213562373095 }] },\n    { \"ville1\": \"Smolensk\", \"ville2\": \"Wilno\", \"longueur\": 3, \"couleur\": \"JAUNE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1344.5, \"y\": 274.5, \"dx\": 0.5812381937190964, \"dy\": -0.8137334712067349 }, { \"x\": 1386, \"y\": 251, \"dx\": 0.8160244811016552, \"dy\": 0.5780173407803391 }, { \"x\": 1438, \"y\": 289, \"dx\": 0.8160244811016552, \"dy\": 0.5780173407803391 }] },\n    { \"ville1\": \"Venezia\", \"ville2\": \"Zagrab\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 808, \"y\": 680.5, \"dx\": 0.965948051503245, \"dy\": -0.2587360852240835 }, { \"x\": 870.5, \"y\": 691.5, \"dx\": 0.8450788360522153, \"dy\": 0.5346417126044628 }] },\n    { \"ville1\": \"Venezia\", \"ville2\": \"Zurich\", \"longueur\": 2, \"couleur\": \"VERT\", \"isTunnel\": true, \"ferry\": 0, \"segments\": [{ \"x\": 664.5, \"y\": 659.5, \"dx\": 0.8837879163470618, \"dy\": 0.4678877204190327 }, { \"x\": 721.5, \"y\": 689, \"dx\": 0.8765785507795943, \"dy\": 0.48125881219271843 }] },\n    { \"ville1\": \"Warszawa\", \"ville2\": \"Wien\", \"longueur\": 4, \"couleur\": \"BLEU\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 966.5, \"y\": 531.5, \"dx\": 0.860576682823999, \"dy\": -0.5093208939162444 }, { \"x\": 1016.5, \"y\": 493.5, \"dx\": 0.7423931175486519, \"dy\": -0.6699645207146371 }, { \"x\": 1059.5, \"y\": 446, \"dx\": 0.5891721574494418, \"dy\": -0.8080075302163774 }, { \"x\": 1094, \"y\": 392.5, \"dx\": 0.5221538596385299, \"dy\": -0.8528513040762654 }] },\n    { \"ville1\": \"Warszawa\", \"ville2\": \"Wilno\", \"longueur\": 3, \"couleur\": \"ROUGE\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 1142.5, \"y\": 310.5, \"dx\": 0.4678877204190327, \"dy\": -0.8837879163470618 }, { \"x\": 1194, \"y\": 272, \"dx\": 0.9761870601839528, \"dy\": -0.21693045781865616 }, { \"x\": 1257, \"y\": 285, \"dx\": 0.847998304005088, \"dy\": 0.52999894000318 }] },\n    { \"ville1\": \"Wien\", \"ville2\": \"Zagrab\", \"longueur\": 2, \"couleur\": \"GRIS\", \"isTunnel\": false, \"ferry\": 0, \"segments\": [{ \"x\": 912.5, \"y\": 667, \"dx\": 0.08588834215301201, \"dy\": -0.9963047689749394 }, { \"x\": 916.5, \"y\": 604.5, \"dx\": 0.054464493159869794, \"dy\": -0.9985157079309461 }] }\n];","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\nlet hostname = window.location.hostname;\nif (hostname === \"\") {\n    hostname = \"localhost\";\n}\n\nexport const ws = writable(new WebSocket(`ws://${hostname}:3232`));","<script>\nimport { beforeUpdate } from \"svelte\";\n\n  import { villesData, routesData } from \"./plateau_data.js\";\n  import { ws } from \"./stores.js\";\n  export let props;\n\n  const LONGUEUR_SEGMENT = 60;\n  const LARGEUR_SEGMENT = 20;\n  const TAILLE_WAGON = 70;\n  const TAILLE_GARE = 50;\n  const RAYON_VILLE = 12;\n\n  function toggleTracks() {\n    const cache = document.getElementById(\"cache\");\n    if (cache.style.visibility === \"hidden\") {\n      cache.style.visibility = \"\";\n    } else {\n      cache.style.visibility = \"hidden\";\n    }\n  }\n\n  class Ville {\n    constructor(nom, x, y) {\n      this.nom = nom;\n      this.x = x;\n      this.y = y;\n      this.proprietaire = undefined;\n    }\n\n    onclick() {\n      $ws.send(this.nom);\n    }\n  }\n\n  class Route {\n    constructor(ville1, ville2, longueur, couleur, isTunnel, ferry, segments) {\n      this.ville1 = ville1;\n      this.ville2 = ville2;\n      this.longueur = longueur;\n      this.couleur = couleur;\n      this.isTunnel = isTunnel;\n      this.ferry = ferry;\n      this.label = `${ville1} - ${ville2}`;\n      this.segments = segments;\n      this.proprietaire = undefined;\n    }\n\n    onclick() {\n      $ws.send(this.label);\n    }\n  }\n\n  const villes = Object.values(villesData).map(\n    (data) => new Ville(data.nom, data.x, data.y)\n  );\n\n  const routes = routesData.map(\n    (data) =>\n      new Route(\n        data.ville1,\n        data.ville2,\n        data.longueur,\n        data.couleur,\n        data.isTunnel,\n        data.ferry,\n        data.segments\n      )\n  );\n\n  // Corriger les labels des routes multiples\n  for (let i = 0; i < routes.length - 1; i++) {\n    if (routes[i].label === routes[i + 1].label) {\n      routes[i].label += \"(1)\";\n      routes[i + 1].label += \"(2)\";\n    }\n  }\n\n  beforeUpdate(() => {\n    for (const routeData of props.routes) {\n      if (routeData.proprietaire) {\n        routes.filter((r) => r.label === routeData.nom)[0].proprietaire =\n          routeData.proprietaire;\n      }\n    }\n    for (const villeData of props.villes) {\n      if (villeData.proprietaire) {\n        villes.filter((v) => v.nom === villeData.nom)[0].proprietaire =\n          villeData.proprietaire;\n      }\n    }\n    routes=routes;\n    villes=villes;\n  });\n</script>\n\n<svg\n  id=\"board\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  viewBox=\"0 0 1701 1097\"\n>\n  <!-- Zones cliquables des routes -->\n  {#each routes as route}\n    <g\n      class=\"route\"\n      on:click={() => route.onclick()}\n    >\n      {#each route.segments as segment, i}\n        <g\n          class=\"segment\"\n          transform=\"translate({segment.x}, {segment.y})\n          rotate({(Math.atan2(segment.dy, segment.dx) * 180) / Math.PI})\"\n        >\n          <rect\n            x={-LONGUEUR_SEGMENT / 2}\n            y={-LARGEUR_SEGMENT / 2}\n            width={LONGUEUR_SEGMENT}\n            height={LARGEUR_SEGMENT}\n          />\n        </g>\n      {/each}\n    </g>\n  {/each}\n\n  <!-- Zones cliquables des villes -->\n  {#each villes as ville}\n    <g\n      class=\"ville\"\n      transform=\"translate({ville.x}, {ville.y})\"\n      on:click={() => ville.onclick()}\n    >\n      <circle cx=\"0\" cy=\"0\" r={RAYON_VILLE} />\n    </g>\n  {/each}\n\n  <!-- Overlay pour faire ressortir les pièces des joueurs -->\n  <rect\n    id=\"cache\"\n    class=\"no-pointer\"\n    x=\"0\"\n    y=\"0\"\n    width=\"1701\"\n    height=\"1097\"\n    fill=\"#fffc\"\n    style=\"visibility: hidden\"\n  />\n\n  <!-- Routes capturées par les joueurs -->\n  {#each routes as route}\n    <g class=\"no-pointer\">\n      {#each route.segments as segment, i}\n        {#if route.proprietaire !== undefined}\n          <g\n            transform=\"translate({segment.x}, {segment.y})\n            rotate({(Math.atan2(segment.dy, segment.dx) * 180) / Math.PI})\"\n          >\n            <image\n              xlink:href=\"images/image-wagon-{route.proprietaire}.png\"\n              width={TAILLE_WAGON}\n              height={TAILLE_WAGON}\n              transform=\"translate({-TAILLE_WAGON * 0.55}, {-TAILLE_WAGON / 2})\"\n            />\n          </g>\n        {/if}\n      {/each}\n    </g>\n  {/each}\n\n  <!-- Gares construites par les joueurs -->\n  {#each villes as ville}\n    {#if ville.proprietaire !== undefined}\n      <g class=\"no-pointer\" transform=\"translate({ville.x}, {ville.y})\">\n        <image\n          xlink:href=\"images/gare-shadow.png\"\n          width={TAILLE_GARE * 1.05}\n          height={TAILLE_GARE * 1.05}\n          transform=\"translate({-TAILLE_GARE * 0.55}, {-TAILLE_GARE * 0.75})\"\n        />\n        <image\n          xlink:href=\"images/gare-{ville.proprietaire}.png\"\n          width={TAILLE_GARE}\n          height={TAILLE_GARE}\n          transform=\"translate({-TAILLE_GARE * 0.6}, {-TAILLE_GARE * 0.7})\"\n        />\n      </g>\n    {/if}\n  {/each}\n\n  <!-- Bouton pour alterner l'affichage -->\n  <image xlink:href=\"images/toggle-button.png\" x=0 y = 0 width=\"80\" height=\"80\" on:click={toggleTracks}/>\n</svg>\n\n<style>\n  #board {\n    background: url(images/euMap.jpg);\n    background-size: contain;\n    width: 850px;\n    height: 548px;\n    border: 1px var(--col-dark) solid;\n    border-radius: 8px;\n    box-shadow: 2px 2px 2px var(--col-dark);\n  }\n  .ville {\n    stroke: none;\n    fill: #0000;\n  }\n  .route {\n    stroke: none;\n    fill: #0000;\n  }\n  .no-pointer {\n    pointer-events: none;\n  }\n</style>\n","<script>\n    import { ws } from \"./stores.js\";\n    export let props;\n</script>\n\n<div class=\"joueur {props.couleur} {props.estJoueurCourant ? 'actif' : ''}\">\n    <div class=\"header row\">\n        <img\n            class=\"avatar\"\n            alt=\"avatar {props.couleur}\"\n            src=\"images/avatar-{props.couleur}.png\"\n        />\n        <div class=\"info column\">\n            <span class=\"nom\">{props.nom}</span>\n            <div class=\"score\">Score: {props.score}</div>\n            <div class=\"gares\">Gares: {props.nbGares}</div>\n            <div class=\"wagons\">Wagons: {props.nbWagons}</div>\n        </div>\n    </div>\n    <div class=\"secret\">\n        <div class=\"destinations column\">\n            {#each props.destinations as destination}\n                <div\n                    class=\"destination\"\n                    on:click={() => $ws.send(destination.nom)}\n                >\n                    {destination.ville1} - {destination.ville2} ({destination.valeur})\n                </div>\n            {/each}\n        </div>\n        <div class=\"cartes-wagon\">\n            {#each props.cartesWagon as wagon}\n                <div\n                    class=\"carte-wagon {wagon}\"\n                    on:click={() => $ws.send(wagon)}\n                >\n                    <div\n                        class=\"image-wagon\"\n                        style=\"background-image: url(images/carte-wagon-{wagon}.png\"\n                    />\n                </div>\n            {/each}\n        </div>\n        <div class=\"cartes-wagon\">\n            {#each props.cartesWagonPosees as wagon}\n                <div class=\"carte-wagon {wagon}\">\n                    <div\n                        class=\"image-wagon\"\n                        style=\"background-image: url(images/carte-wagon-{wagon}.png\"\n                    />\n                    <div class=\"overlay\" />\n                </div>\n            {/each}\n        </div>\n    </div>\n</div>\n\n<style>\n    .joueur {\n        color: var(--col-dark);\n        border: 1px solid var(--col-dark);\n        border-radius: 8px;\n        width: 280px;\n        padding: 4px;\n        margin-left: 4px;\n        margin-bottom: 4px;\n        box-shadow: 2px 2px 2px var(--col-dark);\n    }\n    .joueur.BLEU {\n        background: var(--col-light-BLEU);\n    }\n    .joueur.VERT {\n        background: var(--col-light-VERT);\n    }\n    .joueur.ROSE {\n        background: var(--col-light-ROSE);\n    }\n    .joueur.ROUGE {\n        background: var(--col-light-ROUGE);\n    }\n    .joueur.JAUNE {\n        background: var(--col-light-JAUNE);\n    }\n    .header {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        margin-bottom: 4px;\n    }\n    .info {\n        width: 100%;\n    }\n    .nom {\n        width: 100%;\n        text-align: center;\n        font-size: 1.5em;\n        font-weight: bold;\n    }\n    .avatar {\n        height: 84px;\n        width: 66px;\n    }\n    .secret {\n        display: none;\n    }\n    .joueur:hover .secret,\n    .joueur.actif .secret {\n        display: block;\n    }\n    .destinations {\n        align-content: right;\n    }\n    .cartes-wagon {\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n        width: 250px;\n    }\n    .carte-wagon {\n        border: 1px solid var(--col-dark);\n        border-radius: 4px;\n        overflow: hidden;\n        position: relative;\n        width: calc(248px * 0.3);\n        height: calc(160px * 0.3);\n        padding: 0;\n        margin-right: -42px;\n    }\n    .carte-wagon .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: var(--col-dark);\n        opacity: 0.5;\n    }\n    .image-wagon {\n        width: 100%;\n        height: 100%;\n        background-size: cover;\n    }\n</style>\n","<script>\n    export let props;\n    import { ws } from \"./stores.js\";\n\n    function onClickButton(label) {\n        $ws.send(label);\n    }\n</script>\n\n<div class=\"prompt\">\n    <div class=\"instruction\">\n    <span class=\"nom-joueur\">{props.nomJoueurCourant}:</span>\n    {props.instruction}\n    </div>\n    <div class=\"boutons\">\n        {#each props.boutons as bouton}\n            <button\n                class=\"btn btn-primary\"\n                on:click={() => onClickButton(bouton)}\n                >{bouton}</button\n            >\n        {/each}\n        {#if props.peutPasser}\n            <button on:click={() => $ws.send(\"\")}>Passer</button>\n        {:else}\n            <button disabled>Passer</button>\n        {/if}\n    </div>\n</div>\n\n<style>\n    .nom-joueur {\n        font-weight: bold;\n    }\n</style>\n","<script>\n    import { afterUpdate } from \"svelte\";\n    export let lines;\n\n    function scrollToBottom() {\n        const logElement = document.getElementById(\"inner-log\");\n        logElement.scrollTop = logElement.scrollHeight;\n    }\n\n    afterUpdate(scrollToBottom);\n</script>\n\n<div id=\"log\">\n    <div id=\"inner-log\">\n        {#each lines as line}\n            <pre>{@html line}</pre>\n        {/each}\n    </div>\n</div>\n\n<style>\n    #log {\n        margin: 5px 0;\n        padding: 10px 30px 12px 26px;\n        width: 408px;\n        height: 263px;\n        font-size: 8pt;\n        background: url(images/dialogue-box_Big.png);\n        background-size: cover;\n    }\n\n    #inner-log {\n        padding: 0px;\n        height: 100%;\n        overflow: overlay;\n    }\n\n    ::-webkit-scrollbar {\n        background-color: transparent;\n    }\n</style>\n","<script>\n    import { ws } from \"./stores.js\";\n    import Log from \"./Log.svelte\";\n    export let props;\n    export let logLines;\n</script>\n\n<div id=\"piles\" class=\"row\">\n    <div class=\"column\">\n        <div id=\"cartes-visibles\" class=\"row\">\n            {#each props.cartesWagonVisibles as couleur}\n                <div class=\"carte visible column\">\n                    <img\n                        class=\"shadow\"\n                        alt={couleur}\n                        src=\"images/carte-wagon-{couleur}.png\"\n                        on:click={() => $ws.send(couleur)}\n                    />\n                    <span>{couleur[0] + couleur.slice(1).toLowerCase()}</span>\n                </div>\n            {/each}\n        </div>\n        <Log lines={logLines} />\n    </div>\n    <div id=\"pile-cartes-wagon\" class=\"carte column\">\n        <img\n            class=\"shadow\"\n            alt=\"wagon\"\n            src=\"images/carte-wagon.png\"\n            on:click={() => $ws.send(\"GRIS\")}\n        />\n        <span>Cartes wagon ({props.pileCartesWagon})</span>\n    </div>\n    <div class=\"carte column\">\n        {#if props.defausseCartesWagon.length === 0}\n            <div class=\"carte-stub\" />\n        {:else}\n            <div id=\"defausse-cartes-wagon\" class=\"carte column\">\n                {#each props.defausseCartesWagon.slice(-15) as couleur}\n                    <img\n                        class=\"shadow\"\n                        alt={couleur}\n                        src=\"images/carte-wagon-{couleur}.png\"\n                    />\n                {/each}\n            </div>\n        {/if}\n        <span>Défausse ({props.defausseCartesWagon.length})</span>\n    </div>\n    <div id=\"pile-destinations\" class=\"carte column\">\n        <img\n            class=\"shadow\"\n            alt=\"destinations\"\n            src=\"images/eu_TicketBack.png\"\n            on:click={() => $ws.send(\"destinations\")}\n        />\n        <span>Destinations ({props.pileDestinations})</span>\n    </div>\n</div>\n\n<style>\n    #piles {\n        justify-content: space-around;\n    }\n    .carte {\n        width: 100px;\n        font-size: 0.8em;\n        text-align: center;\n    }\n    .carte-stub {\n        width: 100px;\n        height: 67px;\n        margin-bottom: 5px;\n    }\n    .carte img {\n        margin-bottom: 5px;\n        border-radius: 4px;\n        border: 1px var(--col-dark) solid;\n        box-shadow: 2px 2px 2px var(--col-dark);\n    }\n    #cartes-visibles {\n        width: 500px;\n        height: 89px;\n        flex-direction: row-reverse;\n    }\n    #defausse-cartes-wagon {\n        flex-direction: column-reverse;\n    }\n    #defausse-cartes-wagon img {\n        margin-top: -55px;\n        display: none;\n    }\n    #defausse-cartes-wagon:hover img {\n        display: block;\n    }\n    #defausse-cartes-wagon img:last-child {\n        margin-top: 0;\n        display: block;\n    }\n    #pile-destinations,\n    #pile-cartes-wagon {\n        margin-left: 10px;\n    }\n</style>\n","<script>\n  import Plateau from \"./Plateau.svelte\";\n  import Joueur from \"./Joueur.svelte\";\n  import Prompt from \"./Prompt.svelte\";\n  import Piles from \"./Piles.svelte\";\n\n  import { ws } from \"./stores.js\";\n  let data;\n\n  $ws.onmessage = function (event) {\n    data = JSON.parse(event.data);\n    console.log(data);\n  };\n</script>\n\n{#if data}\n  <main>\n    <div id=\"main\">\n      <Plateau props={{villes: data.villes, routes: data.routes}} />\n      <div>\n        <Prompt props={data.prompt} />\n        <Piles props={data.piles} logLines={data.log} />\n      </div>\n    </div>\n    <div class=\"joueurs\">\n      {#each data.joueurs as props}\n        <Joueur {props} />\n      {/each}\n    </div>\n  </main>\n{:else}\n  <p>La connexion avec le serveur n'a pas pu être établie.</p>\n  <p>Démarrez le serveur et rechargez la page.</p>\n{/if}\n\n<style>\n  main {\n    display: flex;\n    flex-direction: row;\n  }\n  .joueurs {\n    float: right;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","xlink_attr","setAttributeNS","set_data","wholeText","set_style","key","important","style","removeProperty","setProperty","set_current_component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","villesData","Cadiz","x","y","nom","Madrid","Barcelona","Lisboa","Pamplona","Paris","Dieppe","Brest","London","Amsterdam","Bruxelles","Edinburgh","Zurich","Marseille","Frankfurt","Munchen","Wien","Venezia","Roma","Brindisi","Palermo","Athina","Sofia","Sarajevo","Zagrab","Budapest","Kyiv","Warszawa","Wilno","Smolensk","Moskva","Kharkov","Rostov","Sochi","Erzurum","Constantinople","Angora","Smyrna","Essen","Berlin","Kobenhavn","Stockholm","Riga","Petrograd","Danzig","Bucuresti","Sevastopol","routesData","ville1","ville2","longueur","couleur","isTunnel","ferry","segments","dx","dy","subscriber_queue","hostname","window","location","ws","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","writable","WebSocket","LONGUEUR_SEGMENT","LARGEUR_SEGMENT","Math","atan2","PI","RAYON_VILLE","proprietaire","TAILLE_WAGON","undefined","TAILLE_GARE","toggleTracks","cache","getElementById","visibility","Ville","constructor","onclick","$ws","send","Route","label","villes","values","routes","routeData","villeData","v","route","ville","valeur","score","nbGares","nbWagons","destinations","cartesWagon","cartesWagonPosees","estJoueurCourant","destination","wagon","nomJoueurCourant","instruction","boutons","peutPasser","onClickButton","bouton","scrollToBottom","logElement","scrollTop","scrollHeight","lines","slice","toLowerCase","defausseCartesWagon","pileCartesWagon","pileDestinations","cartesWagonVisibles","logLines","prompt","piles","log","joueurs","onmessage","JSON","parse","console","body"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAEhF,IAAIE,EA84BAC,EA74BJ,SAASC,EAAcC,EAAaC,GAKhC,OAJKJ,IACDA,EAAuBK,SAASC,cAAc,MAElDN,EAAqBO,KAAOH,EACrBD,IAAgBH,EAAqBO,KAyBhD,SAASC,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,KAAUK,GACzB,GAAa,MAATL,EACA,OAAOxB,EAEX,MAAM8B,EAAQN,EAAMO,aAAaF,GACjC,OAAOC,EAAME,YAAc,IAAMF,EAAME,cAAgBF,EAQ1BC,CAAUP,EAAOC,IAoPlD,SAASQ,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAO/B,SAASC,cAAc8B,GAiBlC,SAASC,EAAYD,GACjB,OAAO/B,SAASiC,gBAAgB,6BAA8BF,GAElE,SAASG,EAAKC,GACV,OAAOnC,SAASoC,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOvB,EAAMwB,EAAOC,EAASC,GAElC,OADA1B,EAAK2B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM1B,EAAK4B,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAK7B,EAAM8B,EAAWC,GACd,MAATA,EACA/B,EAAKgC,gBAAgBF,GAChB9B,EAAKiC,aAAaH,KAAeC,GACtC/B,EAAKkC,aAAaJ,EAAWC,GAoCrC,SAASI,EAAWnC,EAAM8B,EAAWC,GACjC/B,EAAKoC,eAAe,+BAAgCN,EAAWC,GAgJnE,SAASM,EAASnB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKoB,YAAcnB,IACnBD,EAAKC,KAAOA,GAapB,SAASoB,EAAUvC,EAAMwC,EAAKT,EAAOU,GACnB,OAAVV,EACA/B,EAAK0C,MAAMC,eAAeH,GAG1BxC,EAAK0C,MAAME,YAAYJ,EAAKT,EAAOU,EAAY,YAAc,IAsSrE,SAASI,EAAsBzD,GAC3BR,EAAoBQ,EAExB,SAAS0D,IACL,IAAKlE,EACD,MAAM,IAAImE,MAAM,oDACpB,OAAOnE,EAmDX,MAAMoE,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBzF,GACzBmF,EAAiBzD,KAAK1B,GAuB1B,MAAM0F,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBjF,EACxB,EAAG,CAGC,KAAO+E,EAAWX,EAAiBpC,QAAQ,CACvC,MAAMxB,EAAY4D,EAAiBW,GACnCA,IACAd,EAAsBzD,GACtB0E,EAAO1E,EAAUG,IAKrB,IAHAsD,EAAsB,MACtBG,EAAiBpC,OAAS,EAC1B+C,EAAW,EACJV,EAAkBrC,QACrBqC,EAAkBc,KAAlBd,GAIJ,IAAK,IAAItC,EAAI,EAAGA,EAAIuC,EAAiBtC,OAAQD,GAAK,EAAG,CACjD,MAAMrB,EAAW4D,EAAiBvC,GAC7B8C,EAAeO,IAAI1E,KAEpBmE,EAAeQ,IAAI3E,GACnBA,KAGR4D,EAAiBtC,OAAS,QACrBoC,EAAiBpC,QAC1B,KAAOuC,EAAgBvC,QACnBuC,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBE,EAAeS,QACfrB,EAAsBgB,GAE1B,SAASC,EAAOvE,GACZ,GAAoB,OAAhBA,EAAG4E,SAAmB,CACtB5E,EAAGuE,SACH3F,EAAQoB,EAAG6E,eACX,MAAMC,EAAQ9E,EAAG8E,MACjB9E,EAAG8E,MAAQ,EAAE,GACb9E,EAAG4E,UAAY5E,EAAG4E,SAASG,EAAE/E,EAAGgF,IAAKF,GACrC9E,EAAGiF,aAAanG,QAAQmF,IAiBhC,MAAMiB,EAAW,IAAIf,IACrB,IAAIgB,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACRzG,EAAQuG,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMrE,IACf8D,EAASS,OAAOF,GAChBA,EAAMrE,EAAEsE,IAGhB,SAASE,EAAeH,EAAOC,EAAO5E,EAAQf,GAC1C,GAAI0F,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAEpF,MAAK,KACVgF,EAASS,OAAOF,GACZ1F,IACIe,GACA2E,EAAMnE,EAAE,GACZvB,QAGR0F,EAAMI,EAAEH,IA6oBhB,SAASI,EAAiBL,GACtBA,GAASA,EAAMH,IAKnB,SAASS,EAAgBlG,EAAWW,EAAQI,EAAQoF,GAChD,MAAMpB,SAAEA,EAAQqB,SAAEA,EAAQhG,WAAEA,EAAUgF,aAAEA,GAAiBpF,EAAUG,GACnE4E,GAAYA,EAASsB,EAAE1F,EAAQI,GAC1BoF,GAED/B,GAAoB,KAChB,MAAMkC,EAAiBF,EAASG,IAAI7H,GAAK8H,OAAOtH,GAC5CkB,EACAA,EAAWC,QAAQiG,GAKnBvH,EAAQuH,GAEZtG,EAAUG,GAAGiG,SAAW,MAGhChB,EAAanG,QAAQmF,GAEzB,SAASqC,EAAkBzG,EAAWsB,GAClC,MAAMnB,EAAKH,EAAUG,GACD,OAAhBA,EAAG4E,WACHhG,EAAQoB,EAAGC,YACXD,EAAG4E,UAAY5E,EAAG4E,SAAStD,EAAEH,GAG7BnB,EAAGC,WAAaD,EAAG4E,SAAW,KAC9B5E,EAAGgF,IAAM,IAGjB,SAASuB,EAAW1G,EAAWuB,IACI,IAA3BvB,EAAUG,GAAG8E,MAAM,KACnBrB,EAAiBvD,KAAKL,GArzBrBmE,IACDA,GAAmB,EACnBH,EAAiB2C,KAAKnC,IAqzBtBxE,EAAUG,GAAG8E,MAAM2B,KAAK,IAE5B5G,EAAUG,GAAG8E,MAAO1D,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASsF,EAAK7G,EAAWsC,EAASwE,EAAUC,EAAiBC,EAAWC,EAAOC,EAAejC,EAAQ,EAAE,IACpG,MAAMkC,EAAmB3H,EACzBiE,EAAsBzD,GACtB,MAAMG,EAAKH,EAAUG,GAAK,CACtB4E,SAAU,KACVI,IAAK,KAEL8B,MAAAA,EACAvC,OAAQjG,EACRuI,UAAAA,EACAI,MAAOxI,IAEPwH,SAAU,GACVhG,WAAY,GACZiH,cAAe,GACfrC,cAAe,GACfI,aAAc,GACdkC,QAAS,IAAIC,IAAIjF,EAAQgF,UAAYH,EAAmBA,EAAiBhH,GAAGmH,QAAU,KAEtFhH,UAAW1B,IACXqG,MAAAA,EACAuC,YAAY,EACZC,KAAMnF,EAAQ3B,QAAUwG,EAAiBhH,GAAGsH,MAEhDP,GAAiBA,EAAc/G,EAAGsH,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAvH,EAAGgF,IAAM2B,EACHA,EAAS9G,EAAWsC,EAAQ2E,OAAS,IAAI,CAAC1F,EAAGoG,KAAQC,KACnD,MAAMjF,EAAQiF,EAAKpG,OAASoG,EAAK,GAAKD,EAOtC,OANIxH,EAAGgF,KAAO6B,EAAU7G,EAAGgF,IAAI5D,GAAIpB,EAAGgF,IAAI5D,GAAKoB,MACtCxC,EAAGqH,YAAcrH,EAAGiH,MAAM7F,IAC3BpB,EAAGiH,MAAM7F,GAAGoB,GACZ+E,GACAhB,EAAW1G,EAAWuB,IAEvBoG,KAET,GACNxH,EAAGuE,SACHgD,GAAQ,EACR3I,EAAQoB,EAAG6E,eAEX7E,EAAG4E,WAAWgC,GAAkBA,EAAgB5G,EAAGgF,KAC/C7C,EAAQ3B,OAAQ,CAChB,GAAI2B,EAAQuF,QAAS,CAEjB,MAAMC,EA91ClB,SAAkBpG,GACd,OAAOqG,MAAMC,KAAKtG,EAAQuG,YA61CJC,CAAS5F,EAAQ3B,QAE/BR,EAAG4E,UAAY5E,EAAG4E,SAASoD,EAAEL,GAC7BA,EAAM7I,QAAQgC,QAIdd,EAAG4E,UAAY5E,EAAG4E,SAASU,IAE3BnD,EAAQ8F,OACRzC,EAAc3F,EAAUG,GAAG4E,UAC/BmB,EAAgBlG,EAAWsC,EAAQ3B,OAAQ2B,EAAQvB,OAAQuB,EAAQ6D,eAEnE3B,IAEJf,EAAsB0D,GAkD1B,MAAMkB,EACFC,WACI7B,EAAkB8B,KAAM,GACxBA,KAAKD,SAAW7J,EAEpB+J,IAAIC,EAAMvI,GACN,MAAMI,EAAaiI,KAAKpI,GAAGG,UAAUmI,KAAUF,KAAKpI,GAAGG,UAAUmI,GAAQ,IAEzE,OADAnI,EAAUD,KAAKH,GACR,KACH,MAAMwI,EAAQpI,EAAUqI,QAAQzI,IACjB,IAAXwI,GACApI,EAAUsI,OAAOF,EAAO,IAGpCG,KAAKC,GA73DT,IAAkBC,EA83DNR,KAAKS,QA93DCD,EA83DkBD,EA73DG,IAA5BjK,OAAOoK,KAAKF,GAAKvH,UA83DhB+G,KAAKpI,GAAGqH,YAAa,EACrBe,KAAKS,MAAMF,GACXP,KAAKpI,GAAGqH,YAAa,IC36D1B,MAAM0B,EAAa,CACtBC,MAAS,CAAEC,EAAK,IAAKC,EAAK,KAAMC,IAAO,SACvCC,OAAU,CAAEH,EAAK,IAAKC,EAAK,IAAKC,IAAO,UACvCE,UAAa,CAAEJ,EAAK,IAAKC,EAAK,IAAKC,IAAO,aAC1CG,OAAU,CAAEL,EAAK,GAAIC,EAAK,IAAKC,IAAO,UACtCI,SAAY,CAAEN,EAAK,IAAKC,EAAK,IAAKC,IAAO,YACzCK,MAAS,CAAEP,EAAK,IAAKC,EAAK,IAAKC,IAAO,SACtCM,OAAU,CAAER,EAAK,IAAKC,EAAK,IAAKC,IAAO,UACvCO,MAAS,CAAET,EAAK,IAAKC,EAAK,IAAKC,IAAO,SACtCQ,OAAU,CAAEV,EAAK,IAAKC,EAAK,IAAKC,IAAO,UACvCS,UAAa,CAAEX,EAAK,IAAKC,EAAK,IAAKC,IAAO,aAC1CU,UAAa,CAAEZ,EAAK,IAAKC,EAAK,IAAKC,IAAO,aAC1CW,UAAa,CAAEb,EAAK,IAAKC,EAAK,GAAIC,IAAO,aACzCY,OAAU,CAAEd,EAAK,IAAKC,EAAK,IAAKC,IAAO,UACvCa,UAAa,CAAEf,EAAK,IAAKC,EAAK,IAAKC,IAAO,aAC1Cc,UAAa,CAAEhB,EAAK,IAAKC,EAAK,IAAKC,IAAO,aAC1Ce,QAAW,CAAEjB,EAAK,IAAKC,EAAK,IAAKC,IAAO,WACxCgB,KAAQ,CAAElB,EAAK,IAAKC,EAAK,IAAKC,IAAO,QACrCiB,QAAW,CAAEnB,EAAK,IAAKC,EAAK,IAAKC,IAAO,WACxCkB,KAAQ,CAAEpB,EAAK,IAAKC,EAAK,IAAKC,IAAO,QACrCmB,SAAY,CAAErB,EAAK,IAAKC,EAAK,IAAKC,IAAO,YACzCoB,QAAW,CAAEtB,EAAK,IAAKC,EAAK,KAAMC,IAAO,WACzCqB,OAAU,CAAEvB,EAAK,KAAMC,EAAK,KAAMC,IAAO,UACzCsB,MAAS,CAAExB,EAAK,KAAMC,EAAK,IAAKC,IAAO,SACvCuB,SAAY,CAAEzB,EAAK,KAAMC,EAAK,IAAKC,IAAO,YAC1CwB,OAAU,CAAE1B,EAAK,IAAKC,EAAK,IAAKC,IAAO,UACvCyB,SAAY,CAAE3B,EAAK,KAAMC,EAAK,IAAKC,IAAO,YAC1C0B,KAAQ,CAAE5B,EAAK,KAAMC,EAAK,IAAKC,IAAO,QACtC2B,SAAY,CAAE7B,EAAK,KAAMC,EAAK,IAAKC,IAAO,YAC1C4B,MAAS,CAAE9B,EAAK,KAAMC,EAAK,IAAKC,IAAO,SACvC6B,SAAY,CAAE/B,EAAK,KAAMC,EAAK,IAAKC,IAAO,YAC1C8B,OAAU,CAAEhC,EAAK,KAAMC,EAAK,IAAKC,IAAO,UACxC+B,QAAW,CAAEjC,EAAK,KAAMC,EAAK,IAAKC,IAAO,WACzCgC,OAAU,CAAElC,EAAK,KAAMC,EAAK,IAAKC,IAAO,UACxCiC,MAAS,CAAEnC,EAAK,KAAMC,EAAK,IAAKC,IAAO,SACvCkC,QAAW,CAAEpC,EAAK,KAAMC,EAAK,IAAKC,IAAO,WACzCmC,eAAkB,CAAErC,EAAK,KAAMC,EAAK,IAAKC,IAAO,kBAChDoC,OAAU,CAAEtC,EAAK,KAAMC,EAAK,KAAMC,IAAO,UACzCqC,OAAU,CAAEvC,EAAK,KAAMC,EAAK,KAAMC,IAAO,UACzCsC,MAAS,CAAExC,EAAK,IAAKC,EAAK,IAAKC,IAAO,SACtCuC,OAAU,CAAEzC,EAAK,IAAKC,EAAK,IAAKC,IAAO,UACvCwC,UAAa,CAAE1C,EAAK,IAAKC,EAAK,IAAKC,IAAO,aAC1CyC,UAAa,CAAE3C,EAAK,IAAKC,EAAK,GAAIC,IAAO,aACzC0C,KAAQ,CAAE5C,EAAK,KAAMC,EAAK,GAAIC,IAAO,QACrC2C,UAAa,CAAE7C,EAAK,KAAMC,EAAK,GAAIC,IAAO,aAC1C4C,OAAU,CAAE9C,EAAK,KAAMC,EAAK,IAAKC,IAAO,UACxC6C,UAAa,CAAE/C,EAAK,KAAMC,EAAK,IAAKC,IAAO,aAC3C8C,WAAc,CAAEhD,EAAK,KAAMC,EAAK,IAAKC,IAAO,eAGnC+C,EAAa,CACtB,CAAEC,OAAU,YAAaC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,IAAO,mBAAqBC,GAAM,qBAC1L,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBAC9U,CAAER,OAAU,YAAaC,OAAU,YAAaC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBACnQ,CAAER,OAAU,YAAaC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,EAAGC,GAAM,GAAK,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,uBAC7N,CAAER,OAAU,SAAUC,OAAU,iBAAkBC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBACnQ,CAAER,OAAU,SAAUC,OAAU,UAAWC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,OAAQwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,OAAQwD,IAAO,mBAAqBC,IAAO,qBAC3V,CAAER,OAAU,SAAUC,OAAU,SAAUC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,OAAQwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,sBACzV,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,iBAAmBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,OAAQwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,sBACja,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,IAAKwD,IAAO,oBAAsBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,IAAO,oBAAsBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,IAAO,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,GAAM,uBAC3a,CAAER,OAAU,SAAUC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,qBAAwB,CAAE1D,EAAK,OAAQC,EAAK,OAAQwD,GAAM,kBAAoBC,GAAM,sBACvQ,CAAER,OAAU,SAAUC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,IAAO,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,IAAO,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,gBAAkBC,GAAM,oBAC3U,CAAER,OAAU,YAAaC,OAAU,SAAUC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBAAwB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,uBACxQ,CAAER,OAAU,YAAaC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,sBACta,CAAER,OAAU,YAAaC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,qBACxQ,CAAER,OAAU,SAAUC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,kBAAqB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,iBAAmBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,sBAC7Z,CAAER,OAAU,SAAUC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,sBAChQ,CAAER,OAAU,SAAUC,OAAU,YAAaC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,sBACtV,CAAER,OAAU,SAAUC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,qBACpV,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,iBAAmBC,IAAO,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,GAAM,iBAAmBC,GAAM,qBACla,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,sBACpa,CAAER,OAAU,SAAUC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBAC3U,CAAER,OAAU,QAASC,OAAU,SAAUC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,kBAAqB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,sBAChQ,CAAER,OAAU,QAASC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,EAAGC,GAAM,KACtY,CAAER,OAAU,QAASC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,sBAC3U,CAAER,OAAU,WAAYC,OAAU,UAAWC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,OAAQwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,IAAO,mBAAqBC,IAAO,qBACvV,CAAER,OAAU,WAAYC,OAAU,OAAQC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBACjQ,CAAER,OAAU,YAAaC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,qBACjQ,CAAER,OAAU,YAAaC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBACtQ,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,qBACrQ,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBACvQ,CAAER,OAAU,YAAaC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBACla,CAAER,OAAU,YAAaC,OAAU,iBAAkBC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBAC3V,CAAER,OAAU,YAAaC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,IAAO,iBAAmBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,IAAO,iBAAmBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,IAAO,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,IAAO,kBAAoBC,GAAM,qBAC7Z,CAAER,OAAU,YAAaC,OAAU,aAAcC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,iBAAmBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBACza,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,mBAAqBC,IAAO,qBACvQ,CAAER,OAAU,WAAYC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,uBAC9jB,CAAER,OAAU,WAAYC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,kBAAqB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,qBAClV,CAAER,OAAU,WAAYC,OAAU,OAAQC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBACjL,CAAER,OAAU,WAAYC,OAAU,OAAQC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBAC/K,CAAER,OAAU,WAAYC,OAAU,SAAUC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,IAAO,iBAAmBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,IAAO,kBAAoBC,GAAM,qBACrQ,CAAER,OAAU,QAASC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,GAAIC,EAAK,OAAQwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,OAAQwD,GAAM,kBAAoBC,GAAM,sBAC9P,CAAER,OAAU,QAASC,OAAU,SAAUC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,MAAOC,EAAK,OAAQwD,IAAO,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,IAAO,kBAAoBC,IAAO,qBACrV,CAAER,OAAU,iBAAkBC,OAAU,aAAcC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,IAAO,oBAAsBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,IAAO,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,IAAO,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,IAAO,kBAAoBC,GAAM,qBACrb,CAAER,OAAU,iBAAkBC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,OAAQwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,GAAM,mBAAqBC,IAAO,oBAChR,CAAER,OAAU,iBAAkBC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,iBAAmBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,oBAClV,CAAER,OAAU,SAAUC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,GAAIwD,GAAM,kBAAoBC,IAAO,qBAClV,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,iBAAmBC,GAAM,iBAAoB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,qBAC9P,CACIR,OAAU,SAAUC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CACjH,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,IAAO,mBAAqBC,GAAM,mBAC5D,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,IAAO,mBAAqBC,GAAM,qBAGlE,CAAER,OAAU,SAAUC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,mBAAqBC,IAAO,qBACpQ,CAAER,OAAU,SAAUC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBACjL,CAAER,OAAU,YAAaC,OAAU,SAAUC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,GAAIwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,iBAAmBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBAC/Z,CAAER,OAAU,YAAaC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,kBAAqB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBACha,CAAER,OAAU,UAAWC,OAAU,aAAcC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,EAAGC,GAAM,GAAK,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAC9X,CAAER,OAAU,UAAWC,OAAU,QAASC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,IAAKwD,IAAO,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,IAAO,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,IAAO,mBAAqBC,GAAM,qBACvV,CAAER,OAAU,QAASC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,IAAO,kBAAoBC,IAAO,qBACjQ,CAAER,OAAU,QAASC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,qBAC3U,CAAER,OAAU,QAASC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,qBAC/U,CAAER,OAAU,YAAaC,OAAU,UAAWC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,sBACpQ,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBACpV,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,iBAAmBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBACjV,CAAER,OAAU,UAAWC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBAAwB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,sBAC9Z,CAAER,OAAU,UAAWC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,IAAO,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,IAAO,kBAAoBC,IAAO,qBACna,CAAER,OAAU,UAAWC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,EAAGC,GAAM,GAAK,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,GAAM,oBAAsBC,GAAM,qBACjO,CAAER,OAAU,YAAaC,OAAU,YAAaC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,GAAIwD,GAAM,kBAAoBC,IAAO,sBAClV,CAAER,OAAU,YAAaC,OAAU,YAAaC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,qBACpV,CAAER,OAAU,OAAQC,OAAU,WAAYC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBAAwB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,IAAO,kBAAoBC,IAAO,qBACvV,CAAER,OAAU,OAAQC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,GAAM,iBAAmBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBAAwB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,uBACra,CAAER,OAAU,OAAQC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,EAAGC,GAAM,KAC5O,CAAER,OAAU,SAAUC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,GAAIC,EAAK,IAAKwD,GAAM,EAAGC,IAAO,GAAK,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBAAwB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBACzS,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,oBAC/U,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,qBAC5U,CAAER,OAAU,YAAaC,OAAU,WAAYC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBAAwB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,sBACza,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,IAAO,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,IAAO,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,IAAO,kBAAoBC,IAAO,kBAAqB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,IAAO,oBAAsBC,IAAO,qBACva,CAAER,OAAU,YAAaC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,GAAKC,IAAO,IAAO,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBAC5X,CAAER,OAAU,YAAaC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,IAAO,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,IAAO,kBAAoBC,GAAM,qBAClQ,CAAER,OAAU,SAAUC,OAAU,YAAaC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,KAAMwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,qBAC7Z,CAAER,OAAU,SAAUC,OAAU,WAAYC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,iBAAmBC,GAAM,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBACnQ,CAAER,OAAU,UAAWC,OAAU,UAAWC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,qBAC7P,CAAER,OAAU,UAAWC,OAAU,OAAQC,SAAY,EAAGC,QAAW,SAAUC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBAC9U,CAAER,OAAU,UAAWC,OAAU,SAAUC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,qBACnQ,CACIR,OAAU,UAAWC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAChH,CAAExD,EAAK,IAAKC,EAAK,KAAMwD,IAAO,kBAAoBC,GAAM,mBACxD,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,IAAO,oBAAsBC,GAAM,mBAC3D,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBACtD,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,sBAGhE,CACIR,OAAU,UAAWC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAClH,CAAExD,EAAK,OAAQC,EAAK,KAAMwD,GAAM,EAAGC,GAAM,GACzC,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,EAAGC,GAAM,GACzC,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,EAAGC,GAAM,GACzC,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,EAAGC,GAAM,GACzC,CAAE1D,EAAK,IAAKC,EAAK,KAAMwD,GAAM,EAAGC,GAAM,GACtC,CAAE1D,EAAK,IAAKC,EAAK,KAAMwD,GAAM,EAAGC,GAAM,KAG9C,CAAER,OAAU,WAAYC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,oBACla,CAAER,OAAU,WAAYC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,iBAAmBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,qBAC/Z,CAAER,OAAU,QAASC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,EAAGC,GAAM,KAC3T,CAAER,OAAU,YAAaC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,GAAIwD,GAAM,EAAGC,GAAM,GAAK,CAAE1D,EAAK,KAAMC,EAAK,GAAIwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,GAAIwD,GAAM,kBAAoBC,IAAO,qBAAwB,CAAE1D,EAAK,KAAMC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,uBAC3X,CAAER,OAAU,YAAaC,OAAU,YAAaC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,GAAIwD,GAAM,kBAAoBC,GAAM,kBAAqB,CAAE1D,EAAK,KAAMC,EAAK,GAAIwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,KAAMwD,GAAM,kBAAoBC,GAAM,qBAAwB,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,qBAAwB,CAAE1D,EAAK,OAAQC,EAAK,GAAIwD,GAAM,EAAGC,GAAM,GAAK,CAAE1D,EAAK,OAAQC,EAAK,KAAMwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,GAAIwD,GAAM,kBAAoBC,GAAM,mBAC9rB,CAAER,OAAU,YAAaC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBACla,CAAER,OAAU,OAAQC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,IAAO,mBAAqBC,GAAM,kBAAqB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBACxZ,CAAER,OAAU,OAAQC,OAAU,UAAWC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,qBAC/P,CAAER,OAAU,SAAUC,OAAU,aAAcC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,oBAAuB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,sBACna,CAAER,OAAU,SAAUC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,IAAKwD,IAAO,oBAAsBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,IAAO,mBAAqBC,GAAM,qBACpQ,CAAER,OAAU,WAAYC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,mBAAqBC,GAAM,qBAChQ,CAAER,OAAU,WAAYC,OAAU,SAAUC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,mBAAqBC,GAAM,mBAAsB,CAAE1D,EAAK,IAAKC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBACpV,CAAER,OAAU,aAAcC,OAAU,QAASC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBAC/P,CAAER,OAAU,WAAYC,OAAU,QAASC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,qBAChV,CAAER,OAAU,UAAWC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,IAAKC,EAAK,MAAOwD,GAAM,iBAAmBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,qBACjQ,CAAER,OAAU,UAAWC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAMC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,kBAAoBC,GAAM,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,IAAKwD,GAAM,kBAAoBC,GAAM,sBAChQ,CAAER,OAAU,WAAYC,OAAU,OAAQC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,MAAOwD,GAAM,iBAAmBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,OAAQC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,qBACpa,CAAER,OAAU,WAAYC,OAAU,QAASC,SAAY,EAAGC,QAAW,QAASC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,OAAQC,EAAK,MAAOwD,GAAM,kBAAoBC,IAAO,mBAAsB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,kBAAoBC,IAAO,oBAAuB,CAAE1D,EAAK,KAAMC,EAAK,IAAKwD,GAAM,iBAAmBC,GAAM,mBACjV,CAAER,OAAU,OAAQC,OAAU,SAAUC,SAAY,EAAGC,QAAW,OAAQC,UAAY,EAAOC,MAAS,EAAGC,SAAY,CAAC,CAAExD,EAAK,MAAOC,EAAK,IAAKwD,GAAM,mBAAqBC,IAAO,mBAAsB,CAAE1D,EAAK,MAAOC,EAAK,MAAOwD,GAAM,oBAAsBC,IAAO,sBCzKjQC,EAAmB,GCFzB,IAAIC,EAAWC,OAAOC,SAASF,SACd,KAAbA,IACAA,EAAW,aAGR,MAAMG,EDab,SAAkBxK,EAAOyK,EAAQ3O,GAC7B,IAAI4O,EACJ,MAAMC,EAAc,IAAIhJ,IACxB,SAASiJ,EAAIC,GACT,GAAIpO,EAAeuD,EAAO6K,KACtB7K,EAAQ6K,EACJH,GAAM,CACN,MAAMI,GAAaV,EAAiBvL,OACpC,IAAK,MAAMkM,KAAcJ,EACrBI,EAAW,KACXX,EAAiB1M,KAAKqN,EAAY/K,GAEtC,GAAI8K,EAAW,CACX,IAAK,IAAIlM,EAAI,EAAGA,EAAIwL,EAAiBvL,OAAQD,GAAK,EAC9CwL,EAAiBxL,GAAG,GAAGwL,EAAiBxL,EAAI,IAEhDwL,EAAiBvL,OAAS,IAuB1C,MAAO,CAAE+L,IAAAA,EAAK7I,OAlBd,SAAgB/F,GACZ4O,EAAI5O,EAAGgE,KAiBWnC,UAftB,SAAmB9B,EAAKiP,EAAalP,GACjC,MAAMiP,EAAa,CAAChP,EAAKiP,GAMzB,OALAL,EAAYzI,IAAI6I,GACS,IAArBJ,EAAYM,OACZP,EAAOD,EAAMG,IAAQ9O,GAEzBC,EAAIiE,GACG,KACH2K,EAAYxH,OAAO4H,GACM,IAArBJ,EAAYM,OACZP,IACAA,EAAO,SChDLQ,CAAS,IAAIC,UAAU,QAAQd,ibC6GjCe,GAAmB,YACnBC,GAAkB,eACfD,iBACCC,0DAPY7I,MAAQiE,OAAKjE,MAAQkE,yBACG,IAArC4E,KAAKC,MAAM/I,MAAQ2H,GAAI3H,MAAQ0H,IAAaoB,KAAKE,gBAH5DrN,SAKEJ,wCAHsByE,MAAQiE,OAAKjE,MAAQkE,yBACG,IAArC4E,KAAKC,MAAM/I,MAAQ2H,GAAI3H,MAAQ0H,IAAaoB,KAAKE,uEAJvDhJ,MAAMyH,8BAAXpL,mKAJJV,+GAISqE,MAAMyH,iBAAXpL,+HAAAA,0KAwBuB4M,sEAHHjJ,KAAMiE,OAAKjE,KAAMkE,eAFzCvI,SAKEJ,uEAHsByE,KAAMiE,OAAKjE,KAAMkE,yJA6BClE,MAAMkJ,iCAC/BC,iBACCA,iCAC8B,KAAfA,SAAwBA,GAAe,sCAP1CnJ,MAAQiE,OAAKjE,MAAQkE,2BACG,IAArC4E,KAAKC,MAAM/I,MAAQ2H,GAAI3H,MAAQ0H,IAAaoB,KAAKE,gBAF5DrN,SAIEJ,iDACkCyE,MAAMkJ,mEAJlBlJ,MAAQiE,OAAKjE,MAAQkE,2BACG,IAArC4E,KAAKC,MAAM/I,MAAQ2H,GAAI3H,MAAQ0H,IAAaoB,KAAKE,wEAHlCI,IAAvBpJ,MAAMkJ,wFAAiBE,IAAvBpJ,MAAMkJ,gIADNlJ,MAAMyH,8BAAXpL,wIADJV,gFACSqE,MAAMyH,iBAAXpL,+HAAAA,iKAwBuB,KAAdgN,iBACe,KAAdA,iCAC6B,KAAdA,QAAqC,KAAdA,0CAGrBrJ,KAAMkJ,iCACxBG,iBACCA,iCAC6B,IAAdA,QAAoC,IAAdA,+EAXLrJ,KAAMiE,OAAKjE,KAAMkE,eAA7DvI,SACEJ,OAMAA,0CAC2ByE,KAAMkJ,mEARSlJ,KAAMiE,OAAKjE,KAAMkE,uEADnCkF,IAAvBpJ,KAAMkJ,wFAAiBE,IAAvBpJ,KAAMkJ,4IApENlJ,0BAAL3D,qCAuBK2D,0BAAL3D,qCAuBK2D,0BAAL3D,qCAqBK2D,0BAAL3D,wrBA1EJV,sGAyCEJ,oGAqDAA,yBAAwF+N,wCAvFjFtJ,aAAL3D,4HAAAA,2BAuBK2D,aAAL3D,4HAAAA,2BAuBK2D,aAAL3D,4HAAAA,2BAqBK2D,aAAL3D,4HAAAA,2EAnKIuM,GAAmB,GACnBC,GAAkB,GAClBM,GAAe,GACfE,GAAc,GACdJ,GAAc,YAEXK,WACDC,EAAQ9O,SAAS+O,eAAe,SACP,WAA3BD,EAAMpL,MAAMsL,WACdF,EAAMpL,MAAMsL,WAAa,GAEzBF,EAAMpL,MAAMsL,WAAa,iEAblB3H,WAiBL4H,EACJC,YAAYxF,EAAKF,EAAGC,GAClBd,KAAKe,IAAMA,EACXf,KAAKa,EAAIA,EACTb,KAAKc,EAAIA,EACTd,KAAK8F,kBAAeE,EAGtBQ,UACEC,EAAIC,KAAK1G,KAAKe,YAIZ4F,EACJJ,YAAYxC,EAAQC,EAAQC,EAAUC,EAASC,EAAUC,EAAOC,GAC9DrE,KAAK+D,OAASA,EACd/D,KAAKgE,OAASA,EACdhE,KAAKiE,SAAWA,EAChBjE,KAAKkE,QAAUA,EACflE,KAAKmE,SAAWA,EAChBnE,KAAKoE,MAAQA,EACbpE,KAAK4G,SAAW7C,OAAYC,IAC5BhE,KAAKqE,SAAWA,EAChBrE,KAAK8F,kBAAeE,EAGtBQ,UACEC,EAAIC,KAAK1G,KAAK4G,cAIZC,EAASvQ,OAAOwQ,OAAOnG,GAAY3C,KACtCxE,OAAa8M,EAAM9M,EAAKuH,IAAKvH,EAAKqH,EAAGrH,EAAKsH,KAGvCiG,EAASjD,EAAW9F,KACvBxE,OACKmN,EACFnN,EAAKuK,OACLvK,EAAKwK,OACLxK,EAAKyK,SACLzK,EAAK0K,QACL1K,EAAK2K,SACL3K,EAAK4K,MACL5K,EAAK6K,oBAKFrL,EAAI,EAAGA,EAAI+N,EAAO9N,OAAS,EAAGD,IACjC+N,EAAO/N,GAAG4N,QAAUG,EAAO/N,EAAI,GAAG4N,QACpCG,EAAO/N,GAAG4N,OAAS,MACnBG,EAAO/N,EAAI,GAAG4N,OAAS,OJ42B7B,IAAsBxQ,EAAAA,iBIv2BP4Q,KAAatI,EAAMqI,OACxBC,EAAUlB,eACZiB,EAAO9I,QAAQhB,GAAMA,EAAE2J,QAAUI,EAAUjG,MAAK,GAAG+E,aACjDkB,EAAUlB,wBAGLmB,KAAavI,EAAMmI,OACxBI,EAAUnB,eACZe,EAAO5I,QAAQiJ,GAAMA,EAAEnG,MAAQkG,EAAUlG,MAAK,GAAG+E,aAC/CmB,EAAUnB,6BJ+1BhB3K,IAAwBvD,GAAG6E,cAAc3E,KAAK1B,6DI70B5B+Q,EAAMX,aAwBNY,EAAMZ,iSCxGP5J,KAAYmH,YAAWnH,KAAYoH,YAAUpH,KAAYyK,0EAAtC,kBAAuB,iBAAsB,0DAJrE9O,sGAIKqE,KAAYmH,+BAAWnH,KAAYoH,+BAAUpH,KAAYyK,2OAYLzK,0CALjCA,+BADxBrE,SAIIJ,2GAEqDyE,wCALjCA,iPAeiCA,+EAHhCA,+BAAzBrE,SACIJ,cAIAA,4EAFqDyE,wCAHhCA,sIAhCVA,KAAMmE,SACEnE,KAAM0K,WACN1K,KAAM2K,aACJ3K,KAAM4K,cAK5B5K,KAAM6K,kCAAXxO,qCAUK2D,KAAM8K,iCAAXzO,qCAaK2D,KAAM+K,uCAAX1O,oIA9BiB,uCACA,uCACC,0PAPP2D,KAAMsH,oCACCtH,KAAMsH,iZALlBtH,KAAMsH,aAAUtH,KAAMgL,iBAAmB,QAAU,8BAAvErP,SACIJ,OACIA,cAKAA,OACIA,qBACAA,4BACAA,4BACAA,4BAGRA,OACIA,yDAUAA,yDAaAA,qFAlCiByE,KAAMsH,wDACCtH,KAAMsH,0CAGPtH,KAAMmE,4BACEnE,KAAM0K,8BACN1K,KAAM2K,gCACJ3K,KAAM4K,sCAK5B5K,KAAM6K,qBAAXxO,+HAAAA,2BAUK2D,KAAM8K,oBAAXzO,+HAAAA,2BAaK2D,KAAM+K,0BAAX1O,+HAAAA,6BAvCM2D,KAAMsH,aAAUtH,KAAMgL,iBAAmB,QAAU,2IAHxDlJ,6DAsBqB+H,EAAIC,KAAKmB,EAAY9G,QAUrB0F,EAAIC,KAAKoB,gKCf3BlL,8GAHNrE,mEAGMqE,qIAMNrE,8GAFAA,6GAZkBqE,KAAMmL,sBAC/BnL,KAAMoL,iBAGIpL,KAAMqL,6BAAXhP,sDAOG2D,KAAMsL,2FAXkC,6MAFrD3P,SACIJ,OACAA,0CAGAA,8FAH0ByE,KAAMmL,yCAC/BnL,KAAMoL,yCAGIpL,KAAMqL,gBAAXhP,4HAAAA,oKAdKyF,cAGFyJ,EAAcvB,GACnBH,EAAIC,KAAKE,6DAaeuB,EAAcC,OAKV3B,EAAIC,KAAK,2JCRrB9J,mEAAZrE,2CAAYqE,mEADTA,0BAAL3D,6MAFVV,SACIJ,gFACWyE,aAAL3D,+HAAAA,gDAVGoP,WACCC,EAAajR,SAAS+O,eAAe,aAC3CkC,EAAWC,UAAYD,EAAWE,0CAJ3BC,KP07Bf,IAAqBrS,SAAAA,EOn7BLiS,GPo7BZlN,IAAwBvD,GAAGiF,aAAa/E,KAAK1B,gRQ36BtBwG,KAAQ,GAAKA,KAAQ8L,MAAM,GAAGC,iKAJ5B/L,sCACoBA,sFAJjCrE,SACIJ,cAMAA,wEAJSyE,0DACoBA,uCAGtBA,KAAQ,GAAKA,KAAQ8L,MAAM,GAAGC,0EAoBlC/L,KAAMgM,oBAAoBF,OAAO,yBAAtCzP,+KADNV,gFACWqE,KAAMgM,oBAAoBF,OAAO,YAAtCzP,+HAAAA,2HAHNV,6HAMiBqE,sCACoBA,mCAH7BrE,6BAESqE,0DACoBA,kIAXpBA,KAAMiM,qBAgBVjM,KAAMgM,oBAAoB3P,YAStB2D,KAAMkM,uBA9ChBlM,KAAMmM,2CAAX9P,yDAwBoC,IAArC2D,KAAMgM,oBAAoB3P,oCAZnB2D,0LASN,6BAAqC,mDAgBrC,yBAA4C,uDAS5C,6BAAsC,+lBAjDpDrE,SACIJ,OACIA,8EAeJA,OACIA,cAMAA,mCAEJA,2BAcIA,mCAEJA,OACIA,cAMAA,kHA9CWyE,KAAMmM,6BAAX9P,yIAAAA,gCAYM2D,kCASSA,KAAMiM,sHAgBVjM,KAAMgM,oBAAoB3P,qCAStB2D,KAAMkM,oMArDpBpK,eACAsK,iGAYyBvC,EAAIC,KAAKxC,OAarBuC,EAAIC,KAAK,YAyBTD,EAAIC,KAAK,+VCvBnCnO,kBACAA,sHAdqBsO,OAAQjK,KAAKiK,OAAQE,OAAQnK,KAAKmK,kCAElCnK,KAAKqM,iCACNrM,KAAKsM,eAAiBtM,KAAKuM,aAIpCvM,KAAKwM,6BAAVnQ,qUATNV,SACEJ,0BAEEA,6CAKFA,yFANmB0O,OAAQjK,KAAKiK,OAAQE,OAAQnK,KAAKmK,4CAElCnK,KAAKqM,8CACNrM,KAAKsM,wBAAiBtM,KAAKuM,gCAIpCvM,KAAKwM,gBAAVnQ,uHAAAA,uHAAAA,6eAVH2D,wUARCpD,ET8IN,IAAyB9B,EAAY0C,8BAAZ1C,IS5IvB+O,EAAI4C,mBAAsBxP,OACxBL,EAAO8P,KAAKC,MAAM1P,EAAML,OACxBgQ,QAAQL,IAAI3P,IT0IqBY,IACjC1C,EAAMsN,IAAI5K,cUpJF,kEAAQ,CACnBhC,OAAQf,SAASoS"}